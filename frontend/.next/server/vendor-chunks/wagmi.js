"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/wagmi";
exports.ids = ["vendor-chunks/wagmi"];
exports.modules = {

/***/ "(ssr)/./node_modules/wagmi/dist/index.js":
/*!******************************************!*\
  !*** ./node_modules/wagmi/dist/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainMismatchError: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ChainMismatchError),\n/* harmony export */   ChainNotConfiguredError: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ChainNotConfiguredError),\n/* harmony export */   ConfigChainsNotFound: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ConfigChainsNotFound),\n/* harmony export */   Connector: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_15__.Connector),\n/* harmony export */   ConnectorAlreadyConnectedError: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ConnectorAlreadyConnectedError),\n/* harmony export */   ConnectorNotFoundError: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_16__.ConnectorNotFoundError),\n/* harmony export */   Context: () => (/* binding */ Context),\n/* harmony export */   SwitchChainNotSupportedError: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.SwitchChainNotSupportedError),\n/* harmony export */   WagmiConfig: () => (/* binding */ WagmiConfig),\n/* harmony export */   configureChains: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.configureChains),\n/* harmony export */   createConfig: () => (/* binding */ createConfig),\n/* harmony export */   createStorage: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.createStorage),\n/* harmony export */   deepEqual: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.deepEqual),\n/* harmony export */   deserialize: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.deserialize),\n/* harmony export */   erc20ABI: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.erc20ABI),\n/* harmony export */   erc4626ABI: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.erc4626ABI),\n/* harmony export */   erc721ABI: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.erc721ABI),\n/* harmony export */   mainnet: () => (/* reexport safe */ viem_chains__WEBPACK_IMPORTED_MODULE_17__.mainnet),\n/* harmony export */   paginatedIndexesConfig: () => (/* binding */ paginatedIndexesConfig),\n/* harmony export */   readContracts: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.readContracts),\n/* harmony export */   sepolia: () => (/* reexport safe */ viem_chains__WEBPACK_IMPORTED_MODULE_18__.sepolia),\n/* harmony export */   serialize: () => (/* reexport safe */ _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.serialize),\n/* harmony export */   useAccount: () => (/* binding */ useAccount),\n/* harmony export */   useBalance: () => (/* binding */ useBalance),\n/* harmony export */   useBlockNumber: () => (/* binding */ useBlockNumber),\n/* harmony export */   useChainId: () => (/* binding */ useChainId),\n/* harmony export */   useConfig: () => (/* binding */ useConfig),\n/* harmony export */   useConnect: () => (/* binding */ useConnect),\n/* harmony export */   useContractEvent: () => (/* binding */ useContractEvent),\n/* harmony export */   useContractInfiniteReads: () => (/* binding */ useContractInfiniteReads),\n/* harmony export */   useContractRead: () => (/* binding */ useContractRead),\n/* harmony export */   useContractReads: () => (/* binding */ useContractReads),\n/* harmony export */   useContractWrite: () => (/* binding */ useContractWrite),\n/* harmony export */   useDisconnect: () => (/* binding */ useDisconnect),\n/* harmony export */   useEnsAddress: () => (/* binding */ useEnsAddress),\n/* harmony export */   useEnsAvatar: () => (/* binding */ useEnsAvatar),\n/* harmony export */   useEnsName: () => (/* binding */ useEnsName),\n/* harmony export */   useEnsResolver: () => (/* binding */ useEnsResolver),\n/* harmony export */   useFeeData: () => (/* binding */ useFeeData),\n/* harmony export */   useInfiniteQuery: () => (/* binding */ useInfiniteQuery),\n/* harmony export */   useMutation: () => (/* binding */ useMutation),\n/* harmony export */   useNetwork: () => (/* binding */ useNetwork),\n/* harmony export */   usePrepareContractWrite: () => (/* binding */ usePrepareContractWrite),\n/* harmony export */   usePrepareSendTransaction: () => (/* binding */ usePrepareSendTransaction),\n/* harmony export */   usePublicClient: () => (/* binding */ usePublicClient),\n/* harmony export */   useQuery: () => (/* binding */ useQuery),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient2),\n/* harmony export */   useSendTransaction: () => (/* binding */ useSendTransaction),\n/* harmony export */   useSignMessage: () => (/* binding */ useSignMessage),\n/* harmony export */   useSignTypedData: () => (/* binding */ useSignTypedData),\n/* harmony export */   useSwitchNetwork: () => (/* binding */ useSwitchNetwork),\n/* harmony export */   useToken: () => (/* binding */ useToken),\n/* harmony export */   useTransaction: () => (/* binding */ useTransaction),\n/* harmony export */   useWaitForTransaction: () => (/* binding */ useWaitForTransaction),\n/* harmony export */   useWalletClient: () => (/* binding */ useWalletClient),\n/* harmony export */   useWatchPendingTransactions: () => (/* binding */ useWatchPendingTransactions),\n/* harmony export */   useWebSocketPublicClient: () => (/* binding */ useWebSocketPublicClient)\n/* harmony export */ });\n/* harmony import */ var _tanstack_query_sync_storage_persister__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/query-sync-storage-persister */ \"(ssr)/./node_modules/@tanstack/query-sync-storage-persister/build/lib/index.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryClient.mjs\");\n/* harmony import */ var _tanstack_react_query_persist_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query-persist-client */ \"(ssr)/./node_modules/@tanstack/query-persist-client-core/build/lib/persist.mjs\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/chunk-TSH6VVF4.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(ssr)/./node_modules/use-sync-external-store/shim/index.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useMutation.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryObserver.mjs\");\n/* harmony import */ var use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector.js */ \"(ssr)/./node_modules/use-sync-external-store/shim/with-selector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/mainnet.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/sepolia.js\");\n\"use client\";\n\n// src/config.ts\n\n\n\n\nfunction createConfig({\n  queryClient = new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.QueryClient({\n    defaultOptions: {\n      queries: {\n        cacheTime: 1e3 * 60 * 60 * 24,\n        networkMode: \"offlineFirst\",\n        refetchOnWindowFocus: false,\n        retry: 0\n      },\n      mutations: {\n        networkMode: \"offlineFirst\"\n      }\n    }\n  }),\n  storage = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.createStorage)({\n    storage: typeof window !== \"undefined\" && window.localStorage ? window.localStorage : _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.noopStorage\n  }),\n  persister = typeof window !== \"undefined\" ? (0,_tanstack_query_sync_storage_persister__WEBPACK_IMPORTED_MODULE_2__.createSyncStoragePersister)({\n    key: \"cache\",\n    storage,\n    serialize: (x) => x,\n    deserialize: (x) => x\n  }) : void 0,\n  ...args\n}) {\n  const config = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.createConfig)({\n    ...args,\n    storage\n  });\n  if (persister)\n    (0,_tanstack_react_query_persist_client__WEBPACK_IMPORTED_MODULE_3__.persistQueryClient)({\n      queryClient,\n      persister,\n      dehydrateOptions: {\n        shouldDehydrateQuery: (query) => query.cacheTime !== 0 && query.queryKey[0].persist !== false\n      }\n    });\n  return Object.assign(config, { queryClient });\n}\n\n// src/context.ts\n\n\nvar Context = react__WEBPACK_IMPORTED_MODULE_4__.createContext(void 0);\nvar queryClientContext = react__WEBPACK_IMPORTED_MODULE_4__.createContext(\n  void 0\n);\nfunction WagmiConfig({\n  children,\n  config\n}) {\n  return react__WEBPACK_IMPORTED_MODULE_4__.createElement(Context.Provider, {\n    children: react__WEBPACK_IMPORTED_MODULE_4__.createElement(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.QueryClientProvider, {\n      children,\n      client: config.queryClient,\n      context: queryClientContext\n    }),\n    value: config\n  });\n}\nfunction useConfig() {\n  const config = react__WEBPACK_IMPORTED_MODULE_4__.useContext(Context);\n  if (!config)\n    throw new Error(\n      [\n        \"`useConfig` must be used within `WagmiConfig`.\\n\",\n        \"Read more: https://wagmi.sh/react/WagmiConfig\"\n      ].join(\"\\n\")\n    );\n  return config;\n}\n\n// src/hooks/accounts/useAccount.ts\n\n\n\n// src/hooks/utils/query/useBaseQuery.ts\n\n\n\n// src/hooks/utils/useSyncExternalStore.ts\n\nvar useSyncExternalStore2 = use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_6__.useSyncExternalStore;\n\n// src/hooks/utils/query/utils.ts\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (typeof ctor === \"undefined\") {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n  if (typeof arg2 === \"function\") {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 };\n  }\n  return { ...arg2, queryKey: arg1 };\n}\nfunction queryKeyHashFn(queryKey17) {\n  return JSON.stringify(\n    queryKey17,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : typeof val === \"bigint\" ? val.toString() : val\n  );\n}\nfunction shouldThrowError(_useErrorBoundary, params) {\n  if (typeof _useErrorBoundary === \"function\") {\n    return _useErrorBoundary(...params);\n  }\n  return !!_useErrorBoundary;\n}\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach((key) => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\n// src/hooks/utils/query/useBaseQuery.ts\nfunction useBaseQuery(options, Observer) {\n  const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.useQueryClient)({ context: options.context });\n  const isRestoring = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useIsRestoring)();\n  const errorResetBoundary = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__.useQueryErrorResetBoundary)();\n  const defaultedOptions = queryClient.defaultQueryOptions({\n    ...options,\n    queryKeyHashFn\n  });\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = _tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__.notifyManager.batchCalls(\n      defaultedOptions.onError\n    );\n  }\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = _tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__.notifyManager.batchCalls(\n      defaultedOptions.onSuccess\n    );\n  }\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = _tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__.notifyManager.batchCalls(\n      defaultedOptions.onSettled\n    );\n  }\n  if (defaultedOptions.suspense) {\n    if (typeof defaultedOptions.staleTime !== \"number\") {\n      defaultedOptions.staleTime = 1e3;\n    }\n  }\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n  const [observer] = react__WEBPACK_IMPORTED_MODULE_4__.useState(\n    () => new Observer(\n      queryClient,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore2(\n    react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n      (onStoreChange) => isRestoring ? () => void 0 : observer.subscribe(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__.notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(({ data }) => {\n      defaultedOptions.onSuccess?.(data);\n      defaultedOptions.onSettled?.(data, null);\n    }).catch((error) => {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError?.(error);\n      defaultedOptions.onSettled?.(void 0, error);\n    });\n  }\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [\n    result.error,\n    observer.getCurrentQuery()\n  ])) {\n    throw result.error;\n  }\n  const status = result.status === \"loading\" && result.fetchStatus === \"idle\" ? \"idle\" : result.status;\n  const isIdle = status === \"idle\";\n  const isLoading = status === \"loading\" && result.fetchStatus === \"fetching\";\n  return {\n    ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\n// src/hooks/utils/query/useInfiniteQuery.ts\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(\n    { context: queryClientContext, ...parsedOptions },\n    _tanstack_react_query__WEBPACK_IMPORTED_MODULE_10__.InfiniteQueryObserver\n  );\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useMutation.ts\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_11__.parseMutationArgs)(arg1, arg2, arg3);\n  return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_12__.useMutation)({ context: queryClientContext, ...options });\n}\n\n// src/hooks/utils/query/useQuery.ts\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery({ context: queryClientContext, ...parsedOptions }, _tanstack_react_query__WEBPACK_IMPORTED_MODULE_13__.QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useQueryClient.ts\n\nvar useQueryClient2 = () => (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.useQueryClient)({ context: queryClientContext });\n\n// src/hooks/viem/usePublicClient.ts\n\n\nfunction usePublicClient({\n  chainId\n} = {}) {\n  return (0,use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_14__.useSyncExternalStoreWithSelector)(\n    (cb) => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.watchPublicClient)({ chainId }, cb),\n    () => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getPublicClient)({ chainId }),\n    () => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getPublicClient)({ chainId }),\n    (x) => x,\n    (a, b) => a.uid === b.uid\n  );\n}\n\n// src/hooks/viem/useWalletClient.ts\n\n\nfunction queryKey({ chainId }) {\n  return [{ entity: \"walletClient\", chainId, persist: false }];\n}\nfunction queryFn({\n  queryKey: [{ chainId }]\n}) {\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getWalletClient)({ chainId });\n}\nfunction useWalletClient({\n  chainId: chainId_,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { connector } = useAccount();\n  const chainId = useChainId({ chainId: chainId_ });\n  const walletClientQuery = useQuery(queryKey({ chainId }), queryFn, {\n    cacheTime: 0,\n    enabled: Boolean(connector),\n    staleTime: Infinity,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient2();\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    const unwatch = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.watchWalletClient)({ chainId }, (walletClient) => {\n      if (walletClient)\n        queryClient.invalidateQueries(queryKey({ chainId }));\n      else\n        queryClient.removeQueries(queryKey({ chainId }));\n    });\n    return unwatch;\n  }, [queryClient, chainId]);\n  return walletClientQuery;\n}\n\n// src/hooks/viem/useWebSocketPublicClient.ts\n\n\nfunction useWebSocketPublicClient({ chainId } = {}) {\n  return (0,use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_14__.useSyncExternalStoreWithSelector)(\n    (cb) => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.watchWebSocketPublicClient)({ chainId }, cb),\n    () => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getWebSocketPublicClient)({ chainId }),\n    () => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getWebSocketPublicClient)({ chainId }),\n    (x) => x,\n    (a, b) => a?.uid === b?.uid\n  );\n}\n\n// src/hooks/utils/useChainId.ts\nfunction useChainId({ chainId } = {}) {\n  const publicClient = usePublicClient({ chainId });\n  return publicClient.chain.id;\n}\n\n// src/hooks/utils/useForceUpdate.ts\n\nfunction useForceUpdate() {\n  const [, forceUpdate] = react__WEBPACK_IMPORTED_MODULE_4__.useReducer((x) => x + 1, 0);\n  return forceUpdate;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\n\n\n// src/hooks/network-status/useBlockNumber.ts\n\n\nfunction queryKey2({ chainId, scopeKey }) {\n  return [{ entity: \"blockNumber\", chainId, scopeKey }];\n}\nfunction queryFn2({\n  queryKey: [{ chainId }]\n}) {\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchBlockNumber)({ chainId });\n}\nfunction useBlockNumber({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  watch = false,\n  onBlock,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const queryClient = useQueryClient2();\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    if (!enabled)\n      return;\n    if (!watch && !onBlock)\n      return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    const unwatch = publicClient_.watchBlockNumber({\n      onBlockNumber: (blockNumber) => {\n        if (watch)\n          queryClient.setQueryData(queryKey2({ chainId, scopeKey }), blockNumber);\n        if (onBlock)\n          onBlock(blockNumber);\n      },\n      emitOnBegin: true\n    });\n    return unwatch;\n  }, [\n    chainId,\n    scopeKey,\n    onBlock,\n    publicClient,\n    queryClient,\n    watch,\n    webSocketPublicClient,\n    enabled\n  ]);\n  return useQuery(queryKey2({ scopeKey, chainId }), queryFn2, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/network-status/useFeeData.ts\n\n\nfunction queryKey3({\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"feeData\", chainId, formatUnits, scopeKey }];\n}\nfunction queryFn3({\n  queryKey: [{ chainId, formatUnits }]\n}) {\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchFeeData)({ chainId, formatUnits });\n}\nfunction useFeeData({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits = \"gwei\",\n  scopeKey,\n  staleTime,\n  suspense,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(\n    () => queryKey3({\n      chainId,\n      formatUnits,\n      scopeKey\n    }),\n    [chainId, formatUnits, scopeKey]\n  );\n  const feeDataQuery = useQuery(queryKey_, queryFn3, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch),\n    queryKey: queryKey_\n  });\n  return feeDataQuery;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nfunction useInvalidateOnBlock({\n  chainId,\n  enabled,\n  queryKey: queryKey17\n}) {\n  const queryClient = useQueryClient2();\n  const onBlock = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    () => queryClient.invalidateQueries({ queryKey: queryKey17 }, { cancelRefetch: false }),\n    [queryClient, queryKey17]\n  );\n  useBlockNumber({\n    chainId,\n    enabled,\n    onBlock: enabled ? onBlock : void 0,\n    scopeKey: enabled ? void 0 : \"idle\"\n  });\n}\n\n// src/hooks/utils/useSyncExternalStoreWithTracked.ts\n\n\n\nvar isPlainObject2 = (obj) => typeof obj === \"object\" && !Array.isArray(obj);\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot, getServerSnapshot = getSnapshot, isEqual = _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.deepEqual) {\n  const trackedKeys = react__WEBPACK_IMPORTED_MODULE_4__.useRef([]);\n  const result = (0,use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_14__.useSyncExternalStoreWithSelector)(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n    (x) => x,\n    (a, b) => {\n      if (isPlainObject2(a) && isPlainObject2(b) && trackedKeys.current.length) {\n        for (const key of trackedKeys.current) {\n          const equal = isEqual(\n            a[key],\n            b[key]\n          );\n          if (!equal)\n            return false;\n        }\n        return true;\n      }\n      return isEqual(a, b);\n    }\n  );\n  if (isPlainObject2(result)) {\n    const trackedResult = { ...result };\n    Object.defineProperties(\n      trackedResult,\n      Object.entries(trackedResult).reduce(\n        (res, [key, value]) => {\n          return {\n            ...res,\n            [key]: {\n              configurable: false,\n              enumerable: true,\n              get: () => {\n                if (!trackedKeys.current.includes(key)) {\n                  trackedKeys.current.push(key);\n                }\n                return value;\n              }\n            }\n          };\n        },\n        {}\n      )\n    );\n    return trackedResult;\n  }\n  return result;\n}\n\n// src/hooks/accounts/useAccount.ts\nfunction useAccount({ onConnect, onDisconnect } = {}) {\n  const config = useConfig();\n  const watchAccount_ = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (callback) => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.watchAccount)(callback),\n    [config]\n  );\n  const account = useSyncExternalStoreWithTracked(watchAccount_, _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getAccount);\n  const previousAccountRef = react__WEBPACK_IMPORTED_MODULE_4__.useRef();\n  const previousAccount = previousAccountRef.current;\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    if (previousAccount?.status !== \"connected\" && account.status === \"connected\") {\n      onConnect?.({\n        address: account.address,\n        connector: account.connector,\n        isReconnected: previousAccount?.status === \"reconnecting\" || previousAccount?.status === void 0\n      });\n    }\n    if (previousAccount?.status === \"connected\" && account.status === \"disconnected\") {\n      onDisconnect?.();\n    }\n    previousAccountRef.current = account;\n  }, [onConnect, onDisconnect, previousAccount, account]);\n  return account;\n}\n\n// src/hooks/accounts/useBalance.ts\n\n\nfunction queryKey4({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey,\n  token\n}) {\n  return [\n    {\n      entity: \"balance\",\n      address,\n      chainId,\n      formatUnits,\n      scopeKey,\n      token\n    }\n  ];\n}\nfunction queryFn4({\n  queryKey: [{ address, chainId, formatUnits, token }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchBalance)({ address, chainId, formatUnits, token });\n}\nfunction useBalance({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits,\n  scopeKey,\n  staleTime,\n  suspense,\n  token,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(\n    () => queryKey4({ address, chainId, formatUnits, scopeKey, token }),\n    [address, chainId, formatUnits, scopeKey, token]\n  );\n  const balanceQuery = useQuery(queryKey_, queryFn4, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && address),\n    queryKey: queryKey_\n  });\n  return balanceQuery;\n}\n\n// src/hooks/accounts/useConnect.ts\n\n\nvar mutationKey = (args) => [{ entity: \"connect\", ...args }];\nvar mutationFn = (args) => {\n  const { connector, chainId } = args;\n  if (!connector)\n    throw new Error(\"connector is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.connect)({ connector, chainId });\n};\nfunction useConnect({\n  chainId,\n  connector,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({ connector, chainId }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect2 = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => {\n      return mutate({\n        chainId: args?.chainId ?? chainId,\n        connector: args?.connector ?? connector\n      });\n    },\n    [chainId, connector, mutate]\n  );\n  const connectAsync = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => {\n      return mutateAsync({\n        chainId: args?.chainId ?? chainId,\n        connector: args?.connector ?? connector\n      });\n    },\n    [chainId, connector, mutateAsync]\n  );\n  return {\n    connect: connect2,\n    connectAsync,\n    connectors: config.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: variables?.connector,\n    reset,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useDisconnect.ts\n\nvar mutationKey2 = [{ entity: \"disconnect\" }];\nvar mutationFn2 = () => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.disconnect)();\nfunction useDisconnect({\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect2,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey2, mutationFn2, {\n    ...onError ? {\n      onError(error2, _variables, context) {\n        onError(error2, context);\n      }\n    } : {},\n    onMutate,\n    ...onSettled ? {\n      onSettled(_data, error2, _variables, context) {\n        onSettled(error2, context);\n      }\n    } : {},\n    ...onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n    } : {}\n  });\n  return {\n    disconnect: disconnect2,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\n// src/hooks/accounts/useNetwork.ts\n\n\nfunction useNetwork() {\n  const config = useConfig();\n  const watchNetwork_ = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(\n    (callback) => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.watchNetwork)(callback),\n    [config]\n  );\n  return useSyncExternalStoreWithTracked(watchNetwork_, _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getNetwork);\n}\n\n// src/hooks/accounts/useSignMessage.ts\n\n\nvar mutationKey3 = (args) => [{ entity: \"signMessage\", ...args }];\nvar mutationFn3 = (args) => {\n  const { message } = args;\n  if (!message)\n    throw new Error(\"message is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.signMessage)({ message });\n};\nfunction useSignMessage({\n  message,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey3({ message }), mutationFn3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage2 = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => mutate(args || { message }),\n    [message, mutate]\n  );\n  const signMessageAsync = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => mutateAsync(args || { message }),\n    [message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage: signMessage2,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSignTypedData.ts\n\n\nfunction mutationKey4({ domain, types, message, primaryType }) {\n  return [\n    { entity: \"signTypedData\", domain, types, message, primaryType }\n  ];\n}\nfunction mutationFn4(args) {\n  const { domain, types, primaryType, message } = args;\n  if (!domain)\n    throw new Error(\"domain is required\");\n  if (!types)\n    throw new Error(\"types is required\");\n  if (!primaryType)\n    throw new Error(\"primaryType is required\");\n  if (!message)\n    throw new Error(\"message is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.signTypedData)({\n    domain,\n    message,\n    primaryType,\n    types\n  });\n}\nfunction useSignTypedData({\n  domain,\n  types,\n  message,\n  primaryType,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey4({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    mutationFn4,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const signTypedData2 = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => mutate({\n      domain: args?.domain ?? domain,\n      types: args?.types ?? types,\n      message: args?.message ?? message,\n      primaryType: args?.primaryType ?? primaryType\n    }),\n    [domain, types, primaryType, message, mutate]\n  );\n  const signTypedDataAsync = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => mutateAsync({\n      domain: args?.domain ?? domain,\n      types: args?.types ?? types,\n      message: args?.message ?? message,\n      primaryType: args?.primaryType ?? primaryType\n    }),\n    [domain, types, primaryType, message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData: signTypedData2,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSwitchNetwork.ts\n\n\nvar mutationKey5 = (args) => [{ entity: \"switchNetwork\", ...args }];\nvar mutationFn5 = (args) => {\n  const { chainId } = args;\n  if (!chainId)\n    throw new Error(\"chainId is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.switchNetwork)({ chainId });\n};\nfunction useSwitchNetwork({\n  chainId,\n  throwForSwitchChainNotSupported,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey5({ chainId }), mutationFn5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (chainId_) => mutate({ chainId: chainId_ ?? chainId }),\n    [chainId, mutate]\n  );\n  const switchNetworkAsync_ = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (chainId_) => mutateAsync({ chainId: chainId_ ?? chainId }),\n    [chainId, mutateAsync]\n  );\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    const unwatch = config.subscribe(\n      ({ chains, connector }) => ({\n        chains,\n        connector\n      }),\n      forceUpdate\n    );\n    return unwatch;\n  }, [config, forceUpdate]);\n  let switchNetwork2;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!config.connector?.switchChain;\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork2 = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n  return {\n    chains: config.chains ?? [],\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: variables?.chainId,\n    reset,\n    status,\n    switchNetwork: switchNetwork2,\n    switchNetworkAsync,\n    variables\n  };\n}\n\n// src/hooks/contracts/useContractEvent.ts\n\nfunction useContractEvent({\n  address,\n  chainId,\n  abi,\n  listener,\n  eventName\n} = {}) {\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const unwatch = react__WEBPACK_IMPORTED_MODULE_4__.useRef();\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    if (!abi || !address || !eventName)\n      return;\n    const publicClient_ = webSocketPublicClient || publicClient;\n    unwatch.current = publicClient_.watchContractEvent({\n      abi,\n      address,\n      eventName,\n      onLogs: listener\n    });\n    return unwatch.current;\n  }, [abi, address, eventName, publicClient.uid, webSocketPublicClient?.uid]);\n  return unwatch.current;\n}\n\n// src/hooks/contracts/useContractInfiniteReads.ts\n\n\n\nfunction queryKey5({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContractsInfinite\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheKey,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn5({\n  contracts\n}) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag }],\n    pageParam\n  }) => {\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.readContracts)({\n      allowFailure,\n      blockNumber,\n      blockTag,\n      contracts: contracts(pageParam || void 0)\n    });\n  };\n}\nfunction useContractInfiniteReads({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  getNextPageParam,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(oldData, newData) ? oldData : (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_11__.replaceEqualDeep)(oldData, newData),\n  suspense\n}) {\n  const queryKey_ = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(\n    () => queryKey5({ allowFailure, blockNumber, blockTag, cacheKey, scopeKey }),\n    [allowFailure, blockNumber, blockTag, cacheKey, scopeKey]\n  );\n  const enabled = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => {\n    const enabled2 = Boolean(enabled_ && contracts);\n    return enabled2;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn5({ contracts }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\nfunction paginatedIndexesConfig(fn, {\n  perPage,\n  start,\n  direction\n}) {\n  const contracts = (page = 0) => [...Array(perPage).keys()].map((index) => {\n    return direction === \"increment\" ? start + index + page * perPage : start - index - page * perPage;\n  }).filter((index) => index >= 0).flatMap(fn);\n  return {\n    contracts,\n    getNextPageParam(lastPage, pages) {\n      return lastPage?.length === perPage ? pages.length : void 0;\n    }\n  };\n}\n\n// src/hooks/contracts/useContractRead.ts\n\n\n\nfunction queryKey6({\n  account,\n  address,\n  args,\n  blockNumber,\n  blockTag,\n  chainId,\n  functionName,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContract\",\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn6({ abi }) {\n  return async ({\n    queryKey: [\n      { account, address, args, blockNumber, blockTag, chainId, functionName }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    return await (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.readContract)({\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      abi,\n      functionName\n    }) ?? null;\n  };\n}\nfunction useContractRead({\n  abi,\n  address,\n  account,\n  args,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  chainId: chainId_,\n  enabled: enabled_ = true,\n  functionName,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(oldData, newData) ? oldData : (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_11__.replaceEqualDeep)(oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const { data: blockNumber_ } = useBlockNumber({\n    chainId,\n    enabled: watch || cacheOnBlock,\n    scopeKey: watch || cacheOnBlock ? void 0 : \"idle\",\n    watch\n  });\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(\n    () => queryKey6({\n      account,\n      address,\n      args,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }),\n    [\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      functionName,\n      scopeKey\n    ]\n  );\n  const enabled = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => {\n    let enabled2 = Boolean(enabled_ && abi && address && functionName);\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [abi, address, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  return useQuery(\n    queryKey_,\n    queryFn6({\n      abi\n    }),\n    {\n      cacheTime,\n      enabled,\n      isDataEqual,\n      keepPreviousData,\n      select,\n      staleTime,\n      structuralSharing,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/contracts/useContractReads.ts\n\n\n\nfunction queryKey7({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  chainId,\n  contracts,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContracts\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      chainId,\n      scopeKey,\n      contracts: (contracts ?? []).map(({ address, args, chainId: chainId2, functionName }) => ({\n        address,\n        args,\n        chainId: chainId2,\n        functionName\n      }))\n    }\n  ];\n}\nfunction queryFn7({ abis }) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag, contracts: contracts_ }]\n  }) => {\n    const contracts = contracts_.map((contract, i) => ({\n      ...contract,\n      abi: abis[i]\n    }));\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.readContracts)({\n      allowFailure,\n      contracts,\n      blockNumber,\n      blockTag\n    });\n  };\n}\nfunction useContractReads({\n  allowFailure: allowFailure_,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(oldData, newData) ? oldData : (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_11__.replaceEqualDeep)(oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const allowFailure = allowFailure_ ?? true;\n  const { data: blockNumber_ } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(\n    () => queryKey7({\n      allowFailure,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      contracts,\n      scopeKey\n    }),\n    [\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      scopeKey,\n      contracts\n    ]\n  );\n  const enabled = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => {\n    let enabled2 = Boolean(\n      enabled_ && contracts?.every(\n        (x) => x.abi && x.address && x.functionName\n      )\n    );\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  const abis = (contracts ?? []).map(\n    ({ abi }) => abi\n  );\n  return useQuery(queryKey_, queryFn7({ abis }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    staleTime,\n    select,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/contracts/useContractWrite.ts\n\n\n\nfunction mutationKey6({\n  address,\n  abi,\n  functionName,\n  ...config\n}) {\n  const {\n    args,\n    accessList,\n    account,\n    dataSuffix,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    request,\n    value\n  } = config;\n  return [\n    {\n      entity: \"writeContract\",\n      address,\n      args,\n      abi,\n      accessList,\n      account,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }\n  ];\n}\nfunction mutationFn6(config) {\n  if (config.mode === \"prepared\") {\n    if (!config.request)\n      throw new Error(\"request is required\");\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.writeContract)({\n      mode: \"prepared\",\n      request: config.request\n    });\n  }\n  if (!config.address)\n    throw new Error(\"address is required\");\n  if (!config.abi)\n    throw new Error(\"abi is required\");\n  if (!config.functionName)\n    throw new Error(\"functionName is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.writeContract)({\n    address: config.address,\n    args: config.args,\n    chainId: config.chainId,\n    abi: config.abi,\n    functionName: config.functionName,\n    accessList: config.accessList,\n    account: config.account,\n    dataSuffix: config.dataSuffix,\n    gas: config.gas,\n    gasPrice: config.gasPrice,\n    maxFeePerGas: config.maxFeePerGas,\n    maxPriorityFeePerGas: config.maxPriorityFeePerGas,\n    nonce: config.nonce,\n    value: config.value\n  });\n}\nfunction useContractWrite(config) {\n  const {\n    address,\n    abi,\n    args,\n    chainId,\n    functionName,\n    mode,\n    request,\n    dataSuffix\n  } = config;\n  const {\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getSendTransactionParameters)(config);\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey6({\n      address,\n      abi,\n      functionName,\n      chainId,\n      mode,\n      args,\n      accessList,\n      account,\n      dataSuffix,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }),\n    mutationFn6,\n    {\n      onError: config.onError,\n      onMutate: config.onMutate,\n      onSettled: config.onSettled,\n      onSuccess: config.onSuccess\n    }\n  );\n  const write = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutate({\n        mode: \"prepared\",\n        request: config.request,\n        chainId: config.chainId\n      });\n    }\n    return (overrideConfig) => mutate({\n      address,\n      args,\n      abi,\n      functionName,\n      chainId,\n      accessList,\n      account,\n      dataSuffix,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.chainId,\n    config.mode,\n    config.request,\n    dataSuffix,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutate,\n    nonce,\n    request,\n    value\n  ]);\n  const writeAsync = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutateAsync({\n        mode: \"prepared\",\n        request: config.request\n      });\n    }\n    return (overrideConfig) => mutateAsync({\n      address,\n      args,\n      abi,\n      chainId,\n      functionName,\n      accessList,\n      account,\n      dataSuffix,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.mode,\n    config.request,\n    dataSuffix,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutateAsync,\n    nonce,\n    request,\n    value\n  ]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\n// src/hooks/contracts/usePrepareContractWrite.ts\n\n\nfunction queryKey8({\n  accessList,\n  account,\n  activeChainId,\n  args,\n  address,\n  blockNumber,\n  blockTag,\n  chainId,\n  dataSuffix,\n  functionName,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  walletClientAddress,\n  value\n}) {\n  return [\n    {\n      entity: \"prepareContractTransaction\",\n      accessList,\n      account,\n      activeChainId,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress,\n      value\n    }\n  ];\n}\nfunction queryFn8({\n  abi,\n  walletClient\n}) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        args,\n        address,\n        blockNumber,\n        blockTag,\n        chainId,\n        dataSuffix,\n        functionName,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        value\n      }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    if (!functionName)\n      throw new Error(\"functionName is required\");\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.prepareWriteContract)({\n      abi,\n      accessList,\n      account,\n      args,\n      address,\n      blockNumber,\n      blockTag,\n      chainId,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      walletClient,\n      value\n    });\n  };\n}\nfunction usePrepareContractWrite({\n  address,\n  abi,\n  functionName,\n  chainId,\n  args,\n  cacheTime,\n  dataSuffix,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess,\n  ...config\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const {\n    accessList,\n    account,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.getCallParameters)(config);\n  const prepareContractWriteQuery = useQuery(\n    queryKey8({\n      accessList,\n      account,\n      activeChainId: activeChain?.id,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress: walletClient?.account.address,\n      value\n    }),\n    queryFn8({\n      abi,\n      walletClient\n    }),\n    {\n      cacheTime,\n      enabled: Boolean(\n        enabled && abi && address && functionName && walletClient\n      ),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareContractWriteQuery, {\n    config: {\n      chainId,\n      mode: \"prepared\",\n      request: void 0,\n      ...prepareContractWriteQuery.data\n    }\n  });\n}\n\n// src/hooks/contracts/useToken.ts\n\nfunction queryKey9({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"token\", address, chainId, formatUnits, scopeKey }];\n}\nfunction queryFn9({\n  queryKey: [{ address, chainId, formatUnits }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchToken)({ address, chainId, formatUnits });\n}\nfunction useToken({\n  address,\n  chainId: chainId_,\n  formatUnits = \"ether\",\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey9({ address, chainId, formatUnits, scopeKey }),\n    queryFn9,\n    {\n      cacheTime,\n      enabled: Boolean(enabled && address),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/ens/useEnsAddress.ts\n\nfunction queryKey10({ chainId, name, scopeKey }) {\n  return [{ entity: \"ensAddress\", chainId, name, scopeKey }];\n}\nfunction queryFn10({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchEnsAddress)({ chainId, name });\n}\nfunction useEnsAddress({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey10({ chainId, name, scopeKey }), queryFn10, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsAvatar.ts\n\nfunction queryKey11({ name, chainId, scopeKey }) {\n  return [{ entity: \"ensAvatar\", name, chainId, scopeKey }];\n}\nfunction queryFn11({\n  queryKey: [{ name, chainId }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchEnsAvatar)({ name, chainId });\n}\nfunction useEnsAvatar({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey11({ name, chainId, scopeKey }), queryFn11, {\n    cacheTime,\n    enabled: Boolean(enabled && name && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsName.ts\n\nfunction queryKey12({\n  address,\n  chainId,\n  scopeKey\n}) {\n  return [{ entity: \"ensName\", address, chainId, scopeKey }];\n}\nfunction queryFn12({\n  queryKey: [{ address, chainId }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchEnsName)({ address, chainId });\n}\nfunction useEnsName({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey12({ address, chainId, scopeKey }), queryFn12, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsResolver.ts\n\nfunction queryKey13({ chainId, name, scopeKey }) {\n  return [\n    { entity: \"ensResolver\", chainId, name, scopeKey, persist: false }\n  ];\n}\nfunction queryFn13({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchEnsResolver)({ chainId, name });\n}\nfunction useEnsResolver({\n  chainId: chainId_,\n  name,\n  enabled = true,\n  scopeKey,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey13({ chainId, name, scopeKey }), queryFn13, {\n    cacheTime: 0,\n    enabled: Boolean(enabled && chainId && name),\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/usePrepareSendTransaction.ts\n\nfunction queryKey14({\n  accessList,\n  account,\n  activeChainId,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to,\n  value,\n  scopeKey,\n  walletClientAddress\n}) {\n  return [\n    {\n      entity: \"prepareSendTransaction\",\n      activeChainId,\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      scopeKey,\n      walletClientAddress\n    }\n  ];\n}\nfunction queryFn14({ walletClient }) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        chainId,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value\n      }\n    ]\n  }) => {\n    if (!to)\n      throw new Error(\"to is required\");\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.prepareSendTransaction)({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      walletClient\n    });\n  };\n}\nfunction usePrepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  cacheTime,\n  data,\n  enabled = true,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  staleTime,\n  suspense,\n  to,\n  value,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const prepareSendTransactionQuery = useQuery(\n    queryKey14({\n      accessList,\n      activeChainId: activeChain?.id,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      to,\n      value,\n      walletClientAddress: walletClient?.account.address\n    }),\n    queryFn14({ walletClient }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && walletClient && to),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareSendTransactionQuery, {\n    config: {\n      mode: \"prepared\",\n      ...prepareSendTransactionQuery.isSuccess ? prepareSendTransactionQuery.data : void 0\n    }\n  });\n}\n\n// src/hooks/transactions/useSendTransaction.ts\n\n\nvar mutationKey7 = (args) => [{ entity: \"sendTransaction\", ...args }];\nvar mutationFn7 = ({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) => {\n  if (!to)\n    throw new Error(\"to is required.\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.sendTransaction)({\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  });\n};\nfunction useSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data: data_,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey7({\n      accessList,\n      account,\n      chainId,\n      data: data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      nonce,\n      to,\n      value\n    }),\n    mutationFn7,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const sendTransaction2 = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => mutate({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutate,\n      nonce,\n      to,\n      value\n    ]\n  );\n  const sendTransactionAsync = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    (args) => mutateAsync({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutateAsync,\n      nonce,\n      to,\n      value\n    ]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction: mode === \"prepared\" && !to ? void 0 : sendTransaction2,\n    sendTransactionAsync: mode === \"prepared\" && !to ? void 0 : sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/transactions/useTransaction.ts\n\nfunction queryKey15({ chainId, hash, scopeKey }) {\n  return [{ entity: \"transaction\", chainId, hash, scopeKey }];\n}\nfunction queryFn15({\n  queryKey: [{ chainId, hash }]\n}) {\n  if (!hash)\n    throw new Error(\"hash is required\");\n  return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.fetchTransaction)({ chainId, hash });\n}\nfunction useTransaction({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  hash,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey15({ chainId, hash, scopeKey }), queryFn15, {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/useWaitForTransaction.ts\n\nfunction queryKey16({\n  confirmations,\n  chainId,\n  hash,\n  scopeKey,\n  timeout\n}) {\n  return [\n    {\n      entity: \"waitForTransaction\",\n      confirmations,\n      chainId,\n      hash,\n      scopeKey,\n      timeout\n    }\n  ];\n}\nfunction queryFn16({\n  onReplaced\n}) {\n  return ({\n    queryKey: [{ chainId, confirmations, hash, timeout }]\n  }) => {\n    if (!hash)\n      throw new Error(\"hash is required\");\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_1__.waitForTransaction)({\n      chainId,\n      confirmations,\n      hash,\n      onReplaced,\n      timeout\n    });\n  };\n}\nfunction useWaitForTransaction({\n  chainId: chainId_,\n  confirmations,\n  hash,\n  timeout,\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onReplaced,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey16({ chainId, confirmations, hash, scopeKey, timeout }),\n    queryFn16({ onReplaced }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && hash),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/transactions/useWatchPendingTransactions.ts\n\nfunction useWatchPendingTransactions({\n  chainId: chainId_,\n  enabled = true,\n  listener\n}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    if (!enabled)\n      return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    return publicClient_.watchPendingTransactions({\n      onTransactions: listener\n    });\n  }, [enabled, listener, publicClient, webSocketPublicClient]);\n}\n\n// src/index.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/focusManager.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/focusManager.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: () => (/* binding */ FocusManager),\n/* harmony export */   focusManager: () => (/* binding */ focusManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\nclass FocusManager extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    const changed = this.focused !== focused;\n\n    if (changed) {\n      this.focused = focused;\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\n\n//# sourceMappingURL=focusManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9mb2N1c01hbmFnZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDWDs7QUFFdkMsMkJBQTJCLDJEQUFZO0FBQ3ZDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnREFBUTtBQUNuQiwwQ0FBMEM7OztBQUcxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07OztBQUdOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRXNDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViMy1jcm93ZGZ1bmRpbmctZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9mb2N1c01hbmFnZXIubWpzPzkxMTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcbmltcG9ydCB7IGlzU2VydmVyIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5jbGFzcyBGb2N1c01hbmFnZXIgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5zZXR1cCA9IG9uRm9jdXMgPT4ge1xuICAgICAgLy8gYWRkRXZlbnRMaXN0ZW5lciBkb2VzIG5vdCBleGlzdCBpbiBSZWFjdCBOYXRpdmUsIGJ1dCB3aW5kb3cgZG9lc1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1jb25kaXRpb25cbiAgICAgIGlmICghaXNTZXJ2ZXIgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgY29uc3QgbGlzdGVuZXIgPSAoKSA9PiBvbkZvY3VzKCk7IC8vIExpc3RlbiB0byB2aXNpYmlsbGl0eWNoYW5nZSBhbmQgZm9jdXNcblxuXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAvLyBCZSBzdXJlIHRvIHVuc3Vic2NyaWJlIGlmIGEgbmV3IGhhbmRsZXIgaXMgc2V0XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBsaXN0ZW5lcik7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgbGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfTtcbiAgfVxuXG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5jbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy5zZXR1cCk7XG4gICAgfVxuICB9XG5cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHZhciBfdGhpcyRjbGVhbnVwO1xuXG4gICAgICAoX3RoaXMkY2xlYW51cCA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAuY2FsbCh0aGlzKTtcbiAgICAgIHRoaXMuY2xlYW51cCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdmFyIF90aGlzJGNsZWFudXAyO1xuXG4gICAgdGhpcy5zZXR1cCA9IHNldHVwO1xuICAgIChfdGhpcyRjbGVhbnVwMiA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAyLmNhbGwodGhpcyk7XG4gICAgdGhpcy5jbGVhbnVwID0gc2V0dXAoZm9jdXNlZCA9PiB7XG4gICAgICBpZiAodHlwZW9mIGZvY3VzZWQgPT09ICdib29sZWFuJykge1xuICAgICAgICB0aGlzLnNldEZvY3VzZWQoZm9jdXNlZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9uRm9jdXMoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNldEZvY3VzZWQoZm9jdXNlZCkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLmZvY3VzZWQgIT09IGZvY3VzZWQ7XG5cbiAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgdGhpcy5mb2N1c2VkID0gZm9jdXNlZDtcbiAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIG9uRm9jdXMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoe1xuICAgICAgbGlzdGVuZXJcbiAgICB9KSA9PiB7XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH0pO1xuICB9XG5cbiAgaXNGb2N1c2VkKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5mb2N1c2VkID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvY3VzZWQ7XG4gICAgfSAvLyBkb2N1bWVudCBnbG9iYWwgY2FuIGJlIHVuYXZhaWxhYmxlIGluIHJlYWN0IG5hdGl2ZVxuXG5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIFt1bmRlZmluZWQsICd2aXNpYmxlJywgJ3ByZXJlbmRlciddLmluY2x1ZGVzKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSk7XG4gIH1cblxufVxuY29uc3QgZm9jdXNNYW5hZ2VyID0gbmV3IEZvY3VzTWFuYWdlcigpO1xuXG5leHBvcnQgeyBGb2N1c01hbmFnZXIsIGZvY3VzTWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9jdXNNYW5hZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/focusManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPageParam: () => (/* binding */ getNextPageParam),\n/* harmony export */   getPreviousPageParam: () => (/* binding */ getPreviousPageParam),\n/* harmony export */   hasNextPage: () => (/* binding */ hasNextPage),\n/* harmony export */   hasPreviousPage: () => (/* binding */ hasPreviousPage),\n/* harmony export */   infiniteQueryBehavior: () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\nfunction infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject(\"Missing queryFn for queryKey '\" + context.options.queryHash + \"'\"));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n\n  return;\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n\n  return;\n}\n\n\n//# sourceMappingURL=infiniteQueryBehavior.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfiniteQueryObserver: () => (/* binding */ InfiniteQueryObserver)\n/* harmony export */ });\n/* harmony import */ var _queryObserver_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryObserver.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryObserver.mjs\");\n/* harmony import */ var _infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./infiniteQueryBehavior.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\");\n\n\n\nclass InfiniteQueryObserver extends _queryObserver_mjs__WEBPACK_IMPORTED_MODULE_0__.QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.hasNextPage)(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.hasPreviousPage)(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\n\n//# sourceMappingURL=infiniteQueryObserver.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRDtBQUM4Qzs7QUFFbEcsb0NBQW9DLDZEQUFhO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUI7QUFDdkIsZ0JBQWdCLGlGQUFxQjtBQUNyQyxLQUFLO0FBQ0w7O0FBRUE7QUFDQSx1QkFBdUIsaUZBQXFCO0FBQzVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSSxJQUFJO0FBQ1Isd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxtQkFBbUIsdUVBQVc7QUFDOUIsdUJBQXVCLDJFQUFlO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViMy1jcm93ZGZ1bmRpbmctZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIubWpzPzcxNWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlPYnNlcnZlciB9IGZyb20gJy4vcXVlcnlPYnNlcnZlci5tanMnO1xuaW1wb3J0IHsgaW5maW5pdGVRdWVyeUJlaGF2aW9yLCBoYXNOZXh0UGFnZSwgaGFzUHJldmlvdXNQYWdlIH0gZnJvbSAnLi9pbmZpbml0ZVF1ZXJ5QmVoYXZpb3IubWpzJztcblxuY2xhc3MgSW5maW5pdGVRdWVyeU9ic2VydmVyIGV4dGVuZHMgUXVlcnlPYnNlcnZlciB7XG4gIC8vIFR5cGUgb3ZlcnJpZGVcbiAgLy8gVHlwZSBvdmVycmlkZVxuICAvLyBUeXBlIG92ZXJyaWRlXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlbGVzcy1jb25zdHJ1Y3RvclxuICBjb25zdHJ1Y3RvcihjbGllbnQsIG9wdGlvbnMpIHtcbiAgICBzdXBlcihjbGllbnQsIG9wdGlvbnMpO1xuICB9XG5cbiAgYmluZE1ldGhvZHMoKSB7XG4gICAgc3VwZXIuYmluZE1ldGhvZHMoKTtcbiAgICB0aGlzLmZldGNoTmV4dFBhZ2UgPSB0aGlzLmZldGNoTmV4dFBhZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmZldGNoUHJldmlvdXNQYWdlID0gdGhpcy5mZXRjaFByZXZpb3VzUGFnZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc2V0T3B0aW9ucyhvcHRpb25zLCBub3RpZnlPcHRpb25zKSB7XG4gICAgc3VwZXIuc2V0T3B0aW9ucyh7IC4uLm9wdGlvbnMsXG4gICAgICBiZWhhdmlvcjogaW5maW5pdGVRdWVyeUJlaGF2aW9yKClcbiAgICB9LCBub3RpZnlPcHRpb25zKTtcbiAgfVxuXG4gIGdldE9wdGltaXN0aWNSZXN1bHQob3B0aW9ucykge1xuICAgIG9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IoKTtcbiAgICByZXR1cm4gc3VwZXIuZ2V0T3B0aW1pc3RpY1Jlc3VsdChvcHRpb25zKTtcbiAgfVxuXG4gIGZldGNoTmV4dFBhZ2Uoe1xuICAgIHBhZ2VQYXJhbSxcbiAgICAuLi5vcHRpb25zXG4gIH0gPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKHsgLi4ub3B0aW9ucyxcbiAgICAgIG1ldGE6IHtcbiAgICAgICAgZmV0Y2hNb3JlOiB7XG4gICAgICAgICAgZGlyZWN0aW9uOiAnZm9yd2FyZCcsXG4gICAgICAgICAgcGFnZVBhcmFtXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZldGNoUHJldmlvdXNQYWdlKHtcbiAgICBwYWdlUGFyYW0sXG4gICAgLi4ub3B0aW9uc1xuICB9ID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5mZXRjaCh7IC4uLm9wdGlvbnMsXG4gICAgICBtZXRhOiB7XG4gICAgICAgIGZldGNoTW9yZToge1xuICAgICAgICAgIGRpcmVjdGlvbjogJ2JhY2t3YXJkJyxcbiAgICAgICAgICBwYWdlUGFyYW1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgY3JlYXRlUmVzdWx0KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgdmFyIF9zdGF0ZSRmZXRjaE1ldGEsIF9zdGF0ZSRmZXRjaE1ldGEkZmV0YywgX3N0YXRlJGZldGNoTWV0YTIsIF9zdGF0ZSRmZXRjaE1ldGEyJGZldCwgX3N0YXRlJGRhdGEsIF9zdGF0ZSRkYXRhMjtcblxuICAgIGNvbnN0IHtcbiAgICAgIHN0YXRlXG4gICAgfSA9IHF1ZXJ5O1xuICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLmNyZWF0ZVJlc3VsdChxdWVyeSwgb3B0aW9ucyk7XG4gICAgY29uc3Qge1xuICAgICAgaXNGZXRjaGluZyxcbiAgICAgIGlzUmVmZXRjaGluZ1xuICAgIH0gPSByZXN1bHQ7XG4gICAgY29uc3QgaXNGZXRjaGluZ05leHRQYWdlID0gaXNGZXRjaGluZyAmJiAoKF9zdGF0ZSRmZXRjaE1ldGEgPSBzdGF0ZS5mZXRjaE1ldGEpID09IG51bGwgPyB2b2lkIDAgOiAoX3N0YXRlJGZldGNoTWV0YSRmZXRjID0gX3N0YXRlJGZldGNoTWV0YS5mZXRjaE1vcmUpID09IG51bGwgPyB2b2lkIDAgOiBfc3RhdGUkZmV0Y2hNZXRhJGZldGMuZGlyZWN0aW9uKSA9PT0gJ2ZvcndhcmQnO1xuICAgIGNvbnN0IGlzRmV0Y2hpbmdQcmV2aW91c1BhZ2UgPSBpc0ZldGNoaW5nICYmICgoX3N0YXRlJGZldGNoTWV0YTIgPSBzdGF0ZS5mZXRjaE1ldGEpID09IG51bGwgPyB2b2lkIDAgOiAoX3N0YXRlJGZldGNoTWV0YTIkZmV0ID0gX3N0YXRlJGZldGNoTWV0YTIuZmV0Y2hNb3JlKSA9PSBudWxsID8gdm9pZCAwIDogX3N0YXRlJGZldGNoTWV0YTIkZmV0LmRpcmVjdGlvbikgPT09ICdiYWNrd2FyZCc7XG4gICAgcmV0dXJuIHsgLi4ucmVzdWx0LFxuICAgICAgZmV0Y2hOZXh0UGFnZTogdGhpcy5mZXRjaE5leHRQYWdlLFxuICAgICAgZmV0Y2hQcmV2aW91c1BhZ2U6IHRoaXMuZmV0Y2hQcmV2aW91c1BhZ2UsXG4gICAgICBoYXNOZXh0UGFnZTogaGFzTmV4dFBhZ2Uob3B0aW9ucywgKF9zdGF0ZSRkYXRhID0gc3RhdGUuZGF0YSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9zdGF0ZSRkYXRhLnBhZ2VzKSxcbiAgICAgIGhhc1ByZXZpb3VzUGFnZTogaGFzUHJldmlvdXNQYWdlKG9wdGlvbnMsIChfc3RhdGUkZGF0YTIgPSBzdGF0ZS5kYXRhKSA9PSBudWxsID8gdm9pZCAwIDogX3N0YXRlJGRhdGEyLnBhZ2VzKSxcbiAgICAgIGlzRmV0Y2hpbmdOZXh0UGFnZSxcbiAgICAgIGlzRmV0Y2hpbmdQcmV2aW91c1BhZ2UsXG4gICAgICBpc1JlZmV0Y2hpbmc6IGlzUmVmZXRjaGluZyAmJiAhaXNGZXRjaGluZ05leHRQYWdlICYmICFpc0ZldGNoaW5nUHJldmlvdXNQYWdlXG4gICAgfTtcbiAgfVxuXG59XG5cbmV4cG9ydCB7IEluZmluaXRlUXVlcnlPYnNlcnZlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5maW5pdGVRdWVyeU9ic2VydmVyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/logger.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/logger.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultLogger: () => (/* binding */ defaultLogger)\n/* harmony export */ });\nconst defaultLogger = console;\n\n\n//# sourceMappingURL=logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9sb2dnZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL2xvZ2dlci5tanM/MzAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWZhdWx0TG9nZ2VyID0gY29uc29sZTtcblxuZXhwb3J0IHsgZGVmYXVsdExvZ2dlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/logger.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutation.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutation.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   getDefaultState: () => (/* binding */ getDefaultState)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _removable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/removable.mjs\");\n/* harmony import */ var _retryer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n\n\n\n\n\n// CLASS\nclass Mutation extends _removable_mjs__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || _logger_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultLogger;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (true) {\n          this.logger.error(error);\n        }\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !(0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_2__.canFetch)(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\n\n//# sourceMappingURL=mutation.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutation.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationCache.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationCache.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _mutation_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutation.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n\n\n\n\n\n// CLASS\nclass MutationCache extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new _mutation_mjs__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n  }\n\n  notify(event) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    var _this$resuming;\n\n    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {\n      const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n      return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.noop)), Promise.resolve()));\n    }).then(() => {\n      this.resuming = undefined;\n    });\n    return this.resuming;\n  }\n\n}\n\n\n//# sourceMappingURL=mutationCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9tdXRhdGlvbkNhY2hlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvRDtBQUNWO0FBQ1E7QUFDQTs7QUFFbEQ7QUFDQSw0QkFBNEIsMkRBQVk7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCLG1EQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMkNBQTJDLHlEQUFhO0FBQ3hEOztBQUVBO0FBQ0EsNkNBQTZDLHlEQUFhO0FBQzFEOztBQUVBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLDZEQUFhLHdHQUF3Ryw0Q0FBSTtBQUN0SSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL211dGF0aW9uQ2FjaGUubWpzPzUzOTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gJy4vbm90aWZ5TWFuYWdlci5tanMnO1xuaW1wb3J0IHsgTXV0YXRpb24gfSBmcm9tICcuL211dGF0aW9uLm1qcyc7XG5pbXBvcnQgeyBtYXRjaE11dGF0aW9uLCBub29wIH0gZnJvbSAnLi91dGlscy5tanMnO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcblxuLy8gQ0xBU1NcbmNsYXNzIE11dGF0aW9uQ2FjaGUgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICAgIHRoaXMubXV0YXRpb25zID0gW107XG4gICAgdGhpcy5tdXRhdGlvbklkID0gMDtcbiAgfVxuXG4gIGJ1aWxkKGNsaWVudCwgb3B0aW9ucywgc3RhdGUpIHtcbiAgICBjb25zdCBtdXRhdGlvbiA9IG5ldyBNdXRhdGlvbih7XG4gICAgICBtdXRhdGlvbkNhY2hlOiB0aGlzLFxuICAgICAgbG9nZ2VyOiBjbGllbnQuZ2V0TG9nZ2VyKCksXG4gICAgICBtdXRhdGlvbklkOiArK3RoaXMubXV0YXRpb25JZCxcbiAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0TXV0YXRpb25PcHRpb25zKG9wdGlvbnMpLFxuICAgICAgc3RhdGUsXG4gICAgICBkZWZhdWx0T3B0aW9uczogb3B0aW9ucy5tdXRhdGlvbktleSA/IGNsaWVudC5nZXRNdXRhdGlvbkRlZmF1bHRzKG9wdGlvbnMubXV0YXRpb25LZXkpIDogdW5kZWZpbmVkXG4gICAgfSk7XG4gICAgdGhpcy5hZGQobXV0YXRpb24pO1xuICAgIHJldHVybiBtdXRhdGlvbjtcbiAgfVxuXG4gIGFkZChtdXRhdGlvbikge1xuICAgIHRoaXMubXV0YXRpb25zLnB1c2gobXV0YXRpb24pO1xuICAgIHRoaXMubm90aWZ5KHtcbiAgICAgIHR5cGU6ICdhZGRlZCcsXG4gICAgICBtdXRhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgcmVtb3ZlKG11dGF0aW9uKSB7XG4gICAgdGhpcy5tdXRhdGlvbnMgPSB0aGlzLm11dGF0aW9ucy5maWx0ZXIoeCA9PiB4ICE9PSBtdXRhdGlvbik7XG4gICAgdGhpcy5ub3RpZnkoe1xuICAgICAgdHlwZTogJ3JlbW92ZWQnLFxuICAgICAgbXV0YXRpb25cbiAgICB9KTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5tdXRhdGlvbnMuZm9yRWFjaChtdXRhdGlvbiA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlKG11dGF0aW9uKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0QWxsKCkge1xuICAgIHJldHVybiB0aGlzLm11dGF0aW9ucztcbiAgfVxuXG4gIGZpbmQoZmlsdGVycykge1xuICAgIGlmICh0eXBlb2YgZmlsdGVycy5leGFjdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGZpbHRlcnMuZXhhY3QgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLm11dGF0aW9ucy5maW5kKG11dGF0aW9uID0+IG1hdGNoTXV0YXRpb24oZmlsdGVycywgbXV0YXRpb24pKTtcbiAgfVxuXG4gIGZpbmRBbGwoZmlsdGVycykge1xuICAgIHJldHVybiB0aGlzLm11dGF0aW9ucy5maWx0ZXIobXV0YXRpb24gPT4gbWF0Y2hNdXRhdGlvbihmaWx0ZXJzLCBtdXRhdGlvbikpO1xuICB9XG5cbiAgbm90aWZ5KGV2ZW50KSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKCh7XG4gICAgICAgIGxpc3RlbmVyXG4gICAgICB9KSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmVzdW1lUGF1c2VkTXV0YXRpb25zKCkge1xuICAgIHZhciBfdGhpcyRyZXN1bWluZztcblxuICAgIHRoaXMucmVzdW1pbmcgPSAoKF90aGlzJHJlc3VtaW5nID0gdGhpcy5yZXN1bWluZykgIT0gbnVsbCA/IF90aGlzJHJlc3VtaW5nIDogUHJvbWlzZS5yZXNvbHZlKCkpLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc3QgcGF1c2VkTXV0YXRpb25zID0gdGhpcy5tdXRhdGlvbnMuZmlsdGVyKHggPT4geC5zdGF0ZS5pc1BhdXNlZCk7XG4gICAgICByZXR1cm4gbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiBwYXVzZWRNdXRhdGlvbnMucmVkdWNlKChwcm9taXNlLCBtdXRhdGlvbikgPT4gcHJvbWlzZS50aGVuKCgpID0+IG11dGF0aW9uLmNvbnRpbnVlKCkuY2F0Y2gobm9vcCkpLCBQcm9taXNlLnJlc29sdmUoKSkpO1xuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5yZXN1bWluZyA9IHVuZGVmaW5lZDtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5yZXN1bWluZztcbiAgfVxuXG59XG5cbmV4cG9ydCB7IE11dGF0aW9uQ2FjaGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11dGF0aW9uQ2FjaGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationCache.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationObserver: () => (/* binding */ MutationObserver)\n/* harmony export */ });\n/* harmony import */ var _mutation_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mutation.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutation.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\n\n\n// CLASS\nclass MutationObserver extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.updateResult();\n  }\n\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  setOptions(options) {\n    var _this$currentMutation;\n\n    const prevOptions = this.options;\n    this.options = this.client.defaultMutationOptions(options);\n\n    if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this\n      });\n    }\n\n    (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.setOptions(this.options);\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$currentMutation2;\n\n      (_this$currentMutation2 = this.currentMutation) == null ? void 0 : _this$currentMutation2.removeObserver(this);\n    }\n  }\n\n  onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    const notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  }\n\n  mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    });\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  }\n\n  updateResult() {\n    const state = this.currentMutation ? this.currentMutation.state : (0,_mutation_mjs__WEBPACK_IMPORTED_MODULE_2__.getDefaultState)();\n    const isLoading = state.status === 'loading';\n    const result = { ...state,\n      isLoading,\n      isPending: isLoading,\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    };\n    this.currentResult = result;\n  }\n\n  notify(options) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n\n          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);\n        } else if (options.onError) {\n          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n\n          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      }\n    });\n  }\n\n}\n\n\n//# sourceMappingURL=mutationObserver.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9tdXRhdGlvbk9ic2VydmVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNHO0FBQ0Y7QUFDQTs7QUFFbEQ7QUFDQSwrQkFBK0IsMkRBQVk7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFNBQVMsK0RBQW1CO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5Qjs7QUFFekI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLCtFQUErRTtBQUMvRTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzRUFBc0UsOERBQWU7QUFDckY7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLDZEQUFhO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7O0FBR1I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMOztBQUVBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYjMtY3Jvd2RmdW5kaW5nLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dhZ21pL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvbXV0YXRpb25PYnNlcnZlci5tanM/NTZlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREZWZhdWx0U3RhdGUgfSBmcm9tICcuL211dGF0aW9uLm1qcyc7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSAnLi9ub3RpZnlNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tICcuL3N1YnNjcmliYWJsZS5tanMnO1xuaW1wb3J0IHsgc2hhbGxvd0VxdWFsT2JqZWN0cyB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuLy8gQ0xBU1NcbmNsYXNzIE11dGF0aW9uT2JzZXJ2ZXIgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIG9wdGlvbnMpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMuc2V0T3B0aW9ucyhvcHRpb25zKTtcbiAgICB0aGlzLmJpbmRNZXRob2RzKCk7XG4gICAgdGhpcy51cGRhdGVSZXN1bHQoKTtcbiAgfVxuXG4gIGJpbmRNZXRob2RzKCkge1xuICAgIHRoaXMubXV0YXRlID0gdGhpcy5tdXRhdGUuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlc2V0ID0gdGhpcy5yZXNldC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc2V0T3B0aW9ucyhvcHRpb25zKSB7XG4gICAgdmFyIF90aGlzJGN1cnJlbnRNdXRhdGlvbjtcblxuICAgIGNvbnN0IHByZXZPcHRpb25zID0gdGhpcy5vcHRpb25zO1xuICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuY2xpZW50LmRlZmF1bHRNdXRhdGlvbk9wdGlvbnMob3B0aW9ucyk7XG5cbiAgICBpZiAoIXNoYWxsb3dFcXVhbE9iamVjdHMocHJldk9wdGlvbnMsIHRoaXMub3B0aW9ucykpIHtcbiAgICAgIHRoaXMuY2xpZW50LmdldE11dGF0aW9uQ2FjaGUoKS5ub3RpZnkoe1xuICAgICAgICB0eXBlOiAnb2JzZXJ2ZXJPcHRpb25zVXBkYXRlZCcsXG4gICAgICAgIG11dGF0aW9uOiB0aGlzLmN1cnJlbnRNdXRhdGlvbixcbiAgICAgICAgb2JzZXJ2ZXI6IHRoaXNcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIChfdGhpcyRjdXJyZW50TXV0YXRpb24gPSB0aGlzLmN1cnJlbnRNdXRhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnRNdXRhdGlvbi5zZXRPcHRpb25zKHRoaXMub3B0aW9ucyk7XG4gIH1cblxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdmFyIF90aGlzJGN1cnJlbnRNdXRhdGlvbjI7XG5cbiAgICAgIChfdGhpcyRjdXJyZW50TXV0YXRpb24yID0gdGhpcy5jdXJyZW50TXV0YXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50TXV0YXRpb24yLnJlbW92ZU9ic2VydmVyKHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIG9uTXV0YXRpb25VcGRhdGUoYWN0aW9uKSB7XG4gICAgdGhpcy51cGRhdGVSZXN1bHQoKTsgLy8gRGV0ZXJtaW5lIHdoaWNoIGNhbGxiYWNrcyB0byB0cmlnZ2VyXG5cbiAgICBjb25zdCBub3RpZnlPcHRpb25zID0ge1xuICAgICAgbGlzdGVuZXJzOiB0cnVlXG4gICAgfTtcblxuICAgIGlmIChhY3Rpb24udHlwZSA9PT0gJ3N1Y2Nlc3MnKSB7XG4gICAgICBub3RpZnlPcHRpb25zLm9uU3VjY2VzcyA9IHRydWU7XG4gICAgfSBlbHNlIGlmIChhY3Rpb24udHlwZSA9PT0gJ2Vycm9yJykge1xuICAgICAgbm90aWZ5T3B0aW9ucy5vbkVycm9yID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB0aGlzLm5vdGlmeShub3RpZnlPcHRpb25zKTtcbiAgfVxuXG4gIGdldEN1cnJlbnRSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY3VycmVudFJlc3VsdDtcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMuY3VycmVudE11dGF0aW9uID0gdW5kZWZpbmVkO1xuICAgIHRoaXMudXBkYXRlUmVzdWx0KCk7XG4gICAgdGhpcy5ub3RpZnkoe1xuICAgICAgbGlzdGVuZXJzOiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICBtdXRhdGUodmFyaWFibGVzLCBvcHRpb25zKSB7XG4gICAgdGhpcy5tdXRhdGVPcHRpb25zID0gb3B0aW9ucztcblxuICAgIGlmICh0aGlzLmN1cnJlbnRNdXRhdGlvbikge1xuICAgICAgdGhpcy5jdXJyZW50TXV0YXRpb24ucmVtb3ZlT2JzZXJ2ZXIodGhpcyk7XG4gICAgfVxuXG4gICAgdGhpcy5jdXJyZW50TXV0YXRpb24gPSB0aGlzLmNsaWVudC5nZXRNdXRhdGlvbkNhY2hlKCkuYnVpbGQodGhpcy5jbGllbnQsIHsgLi4udGhpcy5vcHRpb25zLFxuICAgICAgdmFyaWFibGVzOiB0eXBlb2YgdmFyaWFibGVzICE9PSAndW5kZWZpbmVkJyA/IHZhcmlhYmxlcyA6IHRoaXMub3B0aW9ucy52YXJpYWJsZXNcbiAgICB9KTtcbiAgICB0aGlzLmN1cnJlbnRNdXRhdGlvbi5hZGRPYnNlcnZlcih0aGlzKTtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50TXV0YXRpb24uZXhlY3V0ZSgpO1xuICB9XG5cbiAgdXBkYXRlUmVzdWx0KCkge1xuICAgIGNvbnN0IHN0YXRlID0gdGhpcy5jdXJyZW50TXV0YXRpb24gPyB0aGlzLmN1cnJlbnRNdXRhdGlvbi5zdGF0ZSA6IGdldERlZmF1bHRTdGF0ZSgpO1xuICAgIGNvbnN0IGlzTG9hZGluZyA9IHN0YXRlLnN0YXR1cyA9PT0gJ2xvYWRpbmcnO1xuICAgIGNvbnN0IHJlc3VsdCA9IHsgLi4uc3RhdGUsXG4gICAgICBpc0xvYWRpbmcsXG4gICAgICBpc1BlbmRpbmc6IGlzTG9hZGluZyxcbiAgICAgIGlzU3VjY2Vzczogc3RhdGUuc3RhdHVzID09PSAnc3VjY2VzcycsXG4gICAgICBpc0Vycm9yOiBzdGF0ZS5zdGF0dXMgPT09ICdlcnJvcicsXG4gICAgICBpc0lkbGU6IHN0YXRlLnN0YXR1cyA9PT0gJ2lkbGUnLFxuICAgICAgbXV0YXRlOiB0aGlzLm11dGF0ZSxcbiAgICAgIHJlc2V0OiB0aGlzLnJlc2V0XG4gICAgfTtcbiAgICB0aGlzLmN1cnJlbnRSZXN1bHQgPSByZXN1bHQ7XG4gIH1cblxuICBub3RpZnkob3B0aW9ucykge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgLy8gRmlyc3QgdHJpZ2dlciB0aGUgbXV0YXRlIGNhbGxiYWNrc1xuICAgICAgaWYgKHRoaXMubXV0YXRlT3B0aW9ucyAmJiB0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICAgIGlmIChvcHRpb25zLm9uU3VjY2Vzcykge1xuICAgICAgICAgIHZhciBfdGhpcyRtdXRhdGVPcHRpb25zJG8sIF90aGlzJG11dGF0ZU9wdGlvbnMsIF90aGlzJG11dGF0ZU9wdGlvbnMkbzIsIF90aGlzJG11dGF0ZU9wdGlvbnMyO1xuXG4gICAgICAgICAgKF90aGlzJG11dGF0ZU9wdGlvbnMkbyA9IChfdGhpcyRtdXRhdGVPcHRpb25zID0gdGhpcy5tdXRhdGVPcHRpb25zKS5vblN1Y2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRtdXRhdGVPcHRpb25zJG8uY2FsbChfdGhpcyRtdXRhdGVPcHRpb25zLCB0aGlzLmN1cnJlbnRSZXN1bHQuZGF0YSwgdGhpcy5jdXJyZW50UmVzdWx0LnZhcmlhYmxlcywgdGhpcy5jdXJyZW50UmVzdWx0LmNvbnRleHQpO1xuICAgICAgICAgIChfdGhpcyRtdXRhdGVPcHRpb25zJG8yID0gKF90aGlzJG11dGF0ZU9wdGlvbnMyID0gdGhpcy5tdXRhdGVPcHRpb25zKS5vblNldHRsZWQpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRtdXRhdGVPcHRpb25zJG8yLmNhbGwoX3RoaXMkbXV0YXRlT3B0aW9uczIsIHRoaXMuY3VycmVudFJlc3VsdC5kYXRhLCBudWxsLCB0aGlzLmN1cnJlbnRSZXN1bHQudmFyaWFibGVzLCB0aGlzLmN1cnJlbnRSZXN1bHQuY29udGV4dCk7XG4gICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5vbkVycm9yKSB7XG4gICAgICAgICAgdmFyIF90aGlzJG11dGF0ZU9wdGlvbnMkbzMsIF90aGlzJG11dGF0ZU9wdGlvbnMzLCBfdGhpcyRtdXRhdGVPcHRpb25zJG80LCBfdGhpcyRtdXRhdGVPcHRpb25zNDtcblxuICAgICAgICAgIChfdGhpcyRtdXRhdGVPcHRpb25zJG8zID0gKF90aGlzJG11dGF0ZU9wdGlvbnMzID0gdGhpcy5tdXRhdGVPcHRpb25zKS5vbkVycm9yKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRlT3B0aW9ucyRvMy5jYWxsKF90aGlzJG11dGF0ZU9wdGlvbnMzLCB0aGlzLmN1cnJlbnRSZXN1bHQuZXJyb3IsIHRoaXMuY3VycmVudFJlc3VsdC52YXJpYWJsZXMsIHRoaXMuY3VycmVudFJlc3VsdC5jb250ZXh0KTtcbiAgICAgICAgICAoX3RoaXMkbXV0YXRlT3B0aW9ucyRvNCA9IChfdGhpcyRtdXRhdGVPcHRpb25zNCA9IHRoaXMubXV0YXRlT3B0aW9ucykub25TZXR0bGVkKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRlT3B0aW9ucyRvNC5jYWxsKF90aGlzJG11dGF0ZU9wdGlvbnM0LCB1bmRlZmluZWQsIHRoaXMuY3VycmVudFJlc3VsdC5lcnJvciwgdGhpcy5jdXJyZW50UmVzdWx0LnZhcmlhYmxlcywgdGhpcy5jdXJyZW50UmVzdWx0LmNvbnRleHQpO1xuICAgICAgICB9XG4gICAgICB9IC8vIFRoZW4gdHJpZ2dlciB0aGUgbGlzdGVuZXJzXG5cblxuICAgICAgaWYgKG9wdGlvbnMubGlzdGVuZXJzKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKHtcbiAgICAgICAgICBsaXN0ZW5lclxuICAgICAgICB9KSA9PiB7XG4gICAgICAgICAgbGlzdGVuZXIodGhpcy5jdXJyZW50UmVzdWx0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxufVxuXG5leHBvcnQgeyBNdXRhdGlvbk9ic2VydmVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdXRhdGlvbk9ic2VydmVyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: () => (/* binding */ createNotifyManager),\n/* harmony export */   notifyManager: () => (/* binding */ notifyManager)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\n\n//# sourceMappingURL=notifyManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9ub3RpZnlNYW5hZ2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7O0FBRWhEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLE1BQU0sNkRBQWlCO0FBQ3ZCO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSw2REFBaUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFOEM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL25vdGlmeU1hbmFnZXIubWpzPzM5ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZWR1bGVNaWNyb3Rhc2sgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5cbmZ1bmN0aW9uIGNyZWF0ZU5vdGlmeU1hbmFnZXIoKSB7XG4gIGxldCBxdWV1ZSA9IFtdO1xuICBsZXQgdHJhbnNhY3Rpb25zID0gMDtcblxuICBsZXQgbm90aWZ5Rm4gPSBjYWxsYmFjayA9PiB7XG4gICAgY2FsbGJhY2soKTtcbiAgfTtcblxuICBsZXQgYmF0Y2hOb3RpZnlGbiA9IGNhbGxiYWNrID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICB9O1xuXG4gIGNvbnN0IGJhdGNoID0gY2FsbGJhY2sgPT4ge1xuICAgIGxldCByZXN1bHQ7XG4gICAgdHJhbnNhY3Rpb25zKys7XG5cbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gY2FsbGJhY2soKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdHJhbnNhY3Rpb25zLS07XG5cbiAgICAgIGlmICghdHJhbnNhY3Rpb25zKSB7XG4gICAgICAgIGZsdXNoKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICBjb25zdCBzY2hlZHVsZSA9IGNhbGxiYWNrID0+IHtcbiAgICBpZiAodHJhbnNhY3Rpb25zKSB7XG4gICAgICBxdWV1ZS5wdXNoKGNhbGxiYWNrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2NoZWR1bGVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgICBub3RpZnlGbihjYWxsYmFjayk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIC8qKlxuICAgKiBBbGwgY2FsbHMgdG8gdGhlIHdyYXBwZWQgZnVuY3Rpb24gd2lsbCBiZSBiYXRjaGVkLlxuICAgKi9cblxuXG4gIGNvbnN0IGJhdGNoQ2FsbHMgPSBjYWxsYmFjayA9PiB7XG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgICBzY2hlZHVsZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKC4uLmFyZ3MpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcblxuICBjb25zdCBmbHVzaCA9ICgpID0+IHtcbiAgICBjb25zdCBvcmlnaW5hbFF1ZXVlID0gcXVldWU7XG4gICAgcXVldWUgPSBbXTtcblxuICAgIGlmIChvcmlnaW5hbFF1ZXVlLmxlbmd0aCkge1xuICAgICAgc2NoZWR1bGVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgICBiYXRjaE5vdGlmeUZuKCgpID0+IHtcbiAgICAgICAgICBvcmlnaW5hbFF1ZXVlLmZvckVhY2goY2FsbGJhY2sgPT4ge1xuICAgICAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gbm90aWZ5IGZ1bmN0aW9uLlxuICAgKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGZvciBleGFtcGxlIHdyYXAgbm90aWZpY2F0aW9ucyB3aXRoIGBSZWFjdC5hY3RgIHdoaWxlIHJ1bm5pbmcgdGVzdHMuXG4gICAqL1xuXG5cbiAgY29uc3Qgc2V0Tm90aWZ5RnVuY3Rpb24gPSBmbiA9PiB7XG4gICAgbm90aWZ5Rm4gPSBmbjtcbiAgfTtcbiAgLyoqXG4gICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gZnVuY3Rpb24gdG8gYmF0Y2ggbm90aWZpY2F0aW9ucyB0b2dldGhlciBpbnRvIGEgc2luZ2xlIHRpY2suXG4gICAqIEJ5IGRlZmF1bHQgUmVhY3QgUXVlcnkgd2lsbCB1c2UgdGhlIGJhdGNoIGZ1bmN0aW9uIHByb3ZpZGVkIGJ5IFJlYWN0RE9NIG9yIFJlYWN0IE5hdGl2ZS5cbiAgICovXG5cblxuICBjb25zdCBzZXRCYXRjaE5vdGlmeUZ1bmN0aW9uID0gZm4gPT4ge1xuICAgIGJhdGNoTm90aWZ5Rm4gPSBmbjtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGJhdGNoLFxuICAgIGJhdGNoQ2FsbHMsXG4gICAgc2NoZWR1bGUsXG4gICAgc2V0Tm90aWZ5RnVuY3Rpb24sXG4gICAgc2V0QmF0Y2hOb3RpZnlGdW5jdGlvblxuICB9O1xufSAvLyBTSU5HTEVUT05cblxuY29uc3Qgbm90aWZ5TWFuYWdlciA9IGNyZWF0ZU5vdGlmeU1hbmFnZXIoKTtcblxuZXhwb3J0IHsgY3JlYXRlTm90aWZ5TWFuYWdlciwgbm90aWZ5TWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm90aWZ5TWFuYWdlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/onlineManager.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/onlineManager.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: () => (/* binding */ OnlineManager),\n/* harmony export */   onlineManager: () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    const changed = this.online !== online;\n\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\n\n//# sourceMappingURL=onlineManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9vbmxpbmVNYW5hZ2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtEO0FBQ1g7O0FBRXZDO0FBQ0EsNEJBQTRCLDJEQUFZO0FBQ3hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnREFBUTtBQUNuQiwyQ0FBMkM7OztBQUczQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL29ubGluZU1hbmFnZXIubWpzP2MzNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcbmltcG9ydCB7IGlzU2VydmVyIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5jb25zdCBvbmxpbmVFdmVudHMgPSBbJ29ubGluZScsICdvZmZsaW5lJ107XG5jbGFzcyBPbmxpbmVNYW5hZ2VyIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuc2V0dXAgPSBvbk9ubGluZSA9PiB7XG4gICAgICAvLyBhZGRFdmVudExpc3RlbmVyIGRvZXMgbm90IGV4aXN0IGluIFJlYWN0IE5hdGl2ZSwgYnV0IHdpbmRvdyBkb2VzXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LWNvbmRpdGlvblxuICAgICAgaWYgKCFpc1NlcnZlciAmJiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9ICgpID0+IG9uT25saW5lKCk7IC8vIExpc3RlbiB0byBvbmxpbmVcblxuXG4gICAgICAgIG9ubGluZUV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IHtcbiAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgLy8gQmUgc3VyZSB0byB1bnN1YnNjcmliZSBpZiBhIG5ldyBoYW5kbGVyIGlzIHNldFxuICAgICAgICAgIG9ubGluZUV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG5cbiAgb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmNsZWFudXApIHtcbiAgICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcih0aGlzLnNldHVwKTtcbiAgICB9XG4gIH1cblxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdmFyIF90aGlzJGNsZWFudXA7XG5cbiAgICAgIChfdGhpcyRjbGVhbnVwID0gdGhpcy5jbGVhbnVwKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkY2xlYW51cC5jYWxsKHRoaXMpO1xuICAgICAgdGhpcy5jbGVhbnVwID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXIoc2V0dXApIHtcbiAgICB2YXIgX3RoaXMkY2xlYW51cDI7XG5cbiAgICB0aGlzLnNldHVwID0gc2V0dXA7XG4gICAgKF90aGlzJGNsZWFudXAyID0gdGhpcy5jbGVhbnVwKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkY2xlYW51cDIuY2FsbCh0aGlzKTtcbiAgICB0aGlzLmNsZWFudXAgPSBzZXR1cChvbmxpbmUgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBvbmxpbmUgPT09ICdib29sZWFuJykge1xuICAgICAgICB0aGlzLnNldE9ubGluZShvbmxpbmUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbk9ubGluZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc2V0T25saW5lKG9ubGluZSkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLm9ubGluZSAhPT0gb25saW5lO1xuXG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMub25saW5lID0gb25saW5lO1xuICAgICAgdGhpcy5vbk9ubGluZSgpO1xuICAgIH1cbiAgfVxuXG4gIG9uT25saW5lKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKHtcbiAgICAgIGxpc3RlbmVyXG4gICAgfSkgPT4ge1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGlzT25saW5lKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5vbmxpbmUgPT09ICdib29sZWFuJykge1xuICAgICAgcmV0dXJuIHRoaXMub25saW5lO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yID09PSAndW5kZWZpbmVkJyB8fCB0eXBlb2YgbmF2aWdhdG9yLm9uTGluZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBuYXZpZ2F0b3Iub25MaW5lO1xuICB9XG5cbn1cbmNvbnN0IG9ubGluZU1hbmFnZXIgPSBuZXcgT25saW5lTWFuYWdlcigpO1xuXG5leHBvcnQgeyBPbmxpbmVNYW5hZ2VyLCBvbmxpbmVNYW5hZ2VyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbmxpbmVNYW5hZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/query.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/query.mjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifyManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _retryer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retryer.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n/* harmony import */ var _removable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/removable.mjs\");\n\n\n\n\n\n\n// CLASS\nclass Query extends _removable_mjs__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || _logger_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.replaceData)(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (true) {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\"As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']\");\n      }\n    }\n\n    const abortController = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.getAbortController)(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\"Missing queryFn for queryKey '\" + this.options.queryHash + \"'\");\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!((0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!(0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (true) {\n          this.logger.error(error);\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.createRetryer)({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (true) {\n            this.logger.error(\"Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: \" + this.queryHash);\n          }\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.canFetch)(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if ((0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(error) && error.revert && this.revertState) {\n            return { ...this.revertState,\n              fetchStatus: 'idle'\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\n\n//# sourceMappingURL=query.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/query.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryCache.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryCache.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _query_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/query.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n\n\n\n\n\n// CLASS\nclass QueryCache extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new _query_mjs__WEBPACK_IMPORTED_MODULE_2__.Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  find(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.parseFilterArgs)(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query));\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  findAll(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.parseFilterArgs)(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}\n\n\n//# sourceMappingURL=queryCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9xdWVyeUNhY2hlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRjtBQUM3QztBQUNnQjtBQUNGOztBQUVsRDtBQUNBLHlCQUF5QiwyREFBWTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLDhGQUE4RixpRUFBcUI7QUFDbkg7O0FBRUE7QUFDQSxrQkFBa0IsNkNBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJEQUFlOztBQUVyQztBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDLHNEQUFVO0FBQ2hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJEQUFlO0FBQ3JDLDBFQUEwRSxzREFBVTtBQUNwRjs7QUFFQTtBQUNBLElBQUksNkRBQWE7QUFDakI7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxJQUFJLDZEQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTs7QUFFc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3F1ZXJ5Q2FjaGUubWpzP2E3ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaFF1ZXJ5S2V5QnlPcHRpb25zLCBwYXJzZUZpbHRlckFyZ3MsIG1hdGNoUXVlcnkgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5pbXBvcnQgeyBRdWVyeSB9IGZyb20gJy4vcXVlcnkubWpzJztcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICcuL25vdGlmeU1hbmFnZXIubWpzJztcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gJy4vc3Vic2NyaWJhYmxlLm1qcyc7XG5cbi8vIENMQVNTXG5jbGFzcyBRdWVyeUNhY2hlIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICB0aGlzLnF1ZXJpZXMgPSBbXTtcbiAgICB0aGlzLnF1ZXJpZXNNYXAgPSB7fTtcbiAgfVxuXG4gIGJ1aWxkKGNsaWVudCwgb3B0aW9ucywgc3RhdGUpIHtcbiAgICB2YXIgX29wdGlvbnMkcXVlcnlIYXNoO1xuXG4gICAgY29uc3QgcXVlcnlLZXkgPSBvcHRpb25zLnF1ZXJ5S2V5O1xuICAgIGNvbnN0IHF1ZXJ5SGFzaCA9IChfb3B0aW9ucyRxdWVyeUhhc2ggPSBvcHRpb25zLnF1ZXJ5SGFzaCkgIT0gbnVsbCA/IF9vcHRpb25zJHF1ZXJ5SGFzaCA6IGhhc2hRdWVyeUtleUJ5T3B0aW9ucyhxdWVyeUtleSwgb3B0aW9ucyk7XG4gICAgbGV0IHF1ZXJ5ID0gdGhpcy5nZXQocXVlcnlIYXNoKTtcblxuICAgIGlmICghcXVlcnkpIHtcbiAgICAgIHF1ZXJ5ID0gbmV3IFF1ZXJ5KHtcbiAgICAgICAgY2FjaGU6IHRoaXMsXG4gICAgICAgIGxvZ2dlcjogY2xpZW50LmdldExvZ2dlcigpLFxuICAgICAgICBxdWVyeUtleSxcbiAgICAgICAgcXVlcnlIYXNoLFxuICAgICAgICBvcHRpb25zOiBjbGllbnQuZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKSxcbiAgICAgICAgc3RhdGUsXG4gICAgICAgIGRlZmF1bHRPcHRpb25zOiBjbGllbnQuZ2V0UXVlcnlEZWZhdWx0cyhxdWVyeUtleSlcbiAgICAgIH0pO1xuICAgICAgdGhpcy5hZGQocXVlcnkpO1xuICAgIH1cblxuICAgIHJldHVybiBxdWVyeTtcbiAgfVxuXG4gIGFkZChxdWVyeSkge1xuICAgIGlmICghdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5LnF1ZXJ5SGFzaF0pIHtcbiAgICAgIHRoaXMucXVlcmllc01hcFtxdWVyeS5xdWVyeUhhc2hdID0gcXVlcnk7XG4gICAgICB0aGlzLnF1ZXJpZXMucHVzaChxdWVyeSk7XG4gICAgICB0aGlzLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6ICdhZGRlZCcsXG4gICAgICAgIHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZW1vdmUocXVlcnkpIHtcbiAgICBjb25zdCBxdWVyeUluTWFwID0gdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5LnF1ZXJ5SGFzaF07XG5cbiAgICBpZiAocXVlcnlJbk1hcCkge1xuICAgICAgcXVlcnkuZGVzdHJveSgpO1xuICAgICAgdGhpcy5xdWVyaWVzID0gdGhpcy5xdWVyaWVzLmZpbHRlcih4ID0+IHggIT09IHF1ZXJ5KTtcblxuICAgICAgaWYgKHF1ZXJ5SW5NYXAgPT09IHF1ZXJ5KSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnF1ZXJpZXNNYXBbcXVlcnkucXVlcnlIYXNoXTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5ub3RpZnkoe1xuICAgICAgICB0eXBlOiAncmVtb3ZlZCcsXG4gICAgICAgIHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMucXVlcmllcy5mb3JFYWNoKHF1ZXJ5ID0+IHtcbiAgICAgICAgdGhpcy5yZW1vdmUocXVlcnkpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBnZXQocXVlcnlIYXNoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcmllc01hcFtxdWVyeUhhc2hdO1xuICB9XG5cbiAgZ2V0QWxsKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJpZXM7XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBtZXRob2Qgc2hvdWxkIGJlIHVzZWQgd2l0aCBvbmx5IG9uZSBvYmplY3QgYXJndW1lbnQuXG4gICAqL1xuICBmaW5kKGFyZzEsIGFyZzIpIHtcbiAgICBjb25zdCBbZmlsdGVyc10gPSBwYXJzZUZpbHRlckFyZ3MoYXJnMSwgYXJnMik7XG5cbiAgICBpZiAodHlwZW9mIGZpbHRlcnMuZXhhY3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBmaWx0ZXJzLmV4YWN0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5xdWVyaWVzLmZpbmQocXVlcnkgPT4gbWF0Y2hRdWVyeShmaWx0ZXJzLCBxdWVyeSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFRoaXMgbWV0aG9kIHNob3VsZCBiZSB1c2VkIHdpdGggb25seSBvbmUgb2JqZWN0IGFyZ3VtZW50LlxuICAgKi9cbiAgZmluZEFsbChhcmcxLCBhcmcyKSB7XG4gICAgY29uc3QgW2ZpbHRlcnNdID0gcGFyc2VGaWx0ZXJBcmdzKGFyZzEsIGFyZzIpO1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhmaWx0ZXJzKS5sZW5ndGggPiAwID8gdGhpcy5xdWVyaWVzLmZpbHRlcihxdWVyeSA9PiBtYXRjaFF1ZXJ5KGZpbHRlcnMsIHF1ZXJ5KSkgOiB0aGlzLnF1ZXJpZXM7XG4gIH1cblxuICBub3RpZnkoZXZlbnQpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKHtcbiAgICAgICAgbGlzdGVuZXJcbiAgICAgIH0pID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBvbkZvY3VzKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5xdWVyaWVzLmZvckVhY2gocXVlcnkgPT4ge1xuICAgICAgICBxdWVyeS5vbkZvY3VzKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uT25saW5lKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5xdWVyaWVzLmZvckVhY2gocXVlcnkgPT4ge1xuICAgICAgICBxdWVyeS5vbk9ubGluZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxufVxuXG5leHBvcnQgeyBRdWVyeUNhY2hlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeUNhY2hlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryCache.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryClient.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryClient.mjs ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _queryCache_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryCache.mjs\");\n/* harmony import */ var _mutationCache_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationCache.mjs\");\n/* harmony import */ var _focusManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n/* harmony import */ var _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./onlineManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./notifyManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./infiniteQueryBehavior.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n\n\n\n\n\n\n\n\n\n// CLASS\nclass QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new _queryCache_mjs__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n    this.mutationCache = config.mutationCache || new _mutationCache_mjs__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n    this.logger = config.logger || _logger_mjs__WEBPACK_IMPORTED_MODULE_2__.defaultLogger;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n    this.mountCount = 0;\n\n    if ( true && config.logger) {\n      this.logger.error(\"Passing a custom logger has been deprecated and will be removed in the next major version.\");\n    }\n  }\n\n  mount() {\n    this.mountCount++;\n    if (this.mountCount !== 1) return;\n    this.unsubscribeFocus = _focusManager_mjs__WEBPACK_IMPORTED_MODULE_3__.focusManager.subscribe(() => {\n      if (_focusManager_mjs__WEBPACK_IMPORTED_MODULE_3__.focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_4__.onlineManager.subscribe(() => {\n      if (_onlineManager_mjs__WEBPACK_IMPORTED_MODULE_4__.onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    this.mountCount--;\n    if (this.mountCount !== 0) return;\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    this.unsubscribeFocus = undefined;\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n    this.unsubscribeOnline = undefined;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  isFetching(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  /**\n   * @deprecated This method will accept only queryKey in the next major version.\n   */\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  ensureQueryData(arg1, arg2, arg3) {\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(arg1, arg2, arg3);\n    const cachedData = this.getQueryData(parsedOptions.queryKey);\n    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.functionalUpdate)(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey,\n  /**\n   * @deprecated This filters will be removed in the next major version.\n   */\n  filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  removeQueries(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2);\n    const queryCache = this.queryCache;\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n    return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n    const promises = _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n    }\n\n    return promise;\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(arg1, arg2, arg3);\n    parsedOptions.behavior = (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_7__.infiniteQueryBehavior)();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  /**\n   * @deprecated This method should be used with only one object argument.\n   */\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(queryKey) === (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (true) {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(queryKey, x.queryKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several query defaults match with key '\" + JSON.stringify(queryKey) + \"'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(mutationKey) === (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (true) {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(mutationKey, x.mutationKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several mutation defaults match with key '\" + JSON.stringify(mutationKey) + \"'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}\n\n\n//# sourceMappingURL=queryClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryObserver.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryObserver.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryObserver: () => (/* binding */ QueryObserver)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifyManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _focusManager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _retryer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retryer.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n\n\n\n\n\n\nclass QueryObserver extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if ( true && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    const result = this.createResult(query, options);\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result;\n      this.currentResultOptions = this.options;\n      this.currentResultState = this.currentQuery.state;\n    }\n\n    return result;\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer || this.currentResult.isStale || !(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isValidTimeout)(this.options.staleTime)) {\n      return;\n    }\n\n    const time = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer || this.options.enabled === false || !(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isValidTimeout)(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || _focusManager_mjs__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.canFetch)(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.replaceData)(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (true) {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (true) {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.replaceData)(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === 'function' ? notifyOnChangeProps() : notifyOnChangeProps;\n\n      if (notifyOnChangePropsValue === 'all' || !notifyOnChangePropsValue && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !(0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n} // this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\n\n\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false;\n  } // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n\n\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData;\n  } // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n\n\n  if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  } // basically, just keep previous properties if nothing changed\n\n\n  return false;\n}\n\n\n//# sourceMappingURL=queryObserver.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9xdWVyeU9ic2VydmVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBK0c7QUFDM0Q7QUFDRjtBQUNBO0FBQ1M7O0FBRTNELDRCQUE0QiwyREFBWTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLEtBQXFDO0FBQzdDO0FBQ0E7O0FBRUEsU0FBUywrREFBbUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLE1BQU07OztBQUdOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlDQUF5Qzs7QUFFekM7QUFDQTtBQUNBLE1BQU07OztBQUdOLHNDQUFzQzs7QUFFdEM7QUFDQTtBQUNBOztBQUVBLCtEQUErRDs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLCtCQUErQjtBQUMvQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCOztBQUVBO0FBQ0EsOEJBQThCLDRDQUFJO0FBQ2xDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxRQUFRLGdEQUFRLG1DQUFtQywwREFBYztBQUNqRTtBQUNBOztBQUVBLGlCQUFpQiwwREFBYyw0REFBNEQ7QUFDM0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFFBQVEsZ0RBQVEsdUNBQXVDLDBEQUFjO0FBQ3JFO0FBQ0E7O0FBRUE7QUFDQSxzREFBc0QsMkRBQVk7QUFDbEU7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxjQUFjOztBQUVkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLHNEQUFROztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNOzs7QUFHTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1REFBVztBQUM1QjtBQUNBO0FBQ0EsVUFBVTtBQUNWLGNBQWMsSUFBcUM7QUFDbkQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07OztBQUdOO0FBQ0EsMkJBQTJCOztBQUUzQjtBQUNBO0FBQ0EsUUFBUTtBQUNSOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLGdCQUFnQixJQUFxQztBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLHVEQUFXO0FBQzFCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qzs7QUFFOUMsUUFBUSwrREFBbUI7QUFDM0I7QUFDQTs7QUFFQSxxQ0FBcUM7O0FBRXJDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQjtBQUNsQjtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU0scUNBQXFDLDhEQUFnQjtBQUMzRDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBO0FBQ0EsUUFBUTs7O0FBR1I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNULFFBQVE7OztBQUdSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7OztBQUdBLE9BQU8sK0RBQW1CO0FBQzFCO0FBQ0EsSUFBSTs7O0FBR0o7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3F1ZXJ5T2JzZXJ2ZXIubWpzPzkyODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2hhbGxvd0VxdWFsT2JqZWN0cywgbm9vcCwgaXNTZXJ2ZXIsIGlzVmFsaWRUaW1lb3V0LCB0aW1lVW50aWxTdGFsZSwgcmVwbGFjZURhdGEgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSAnLi9ub3RpZnlNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBmb2N1c01hbmFnZXIgfSBmcm9tICcuL2ZvY3VzTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcbmltcG9ydCB7IGNhbkZldGNoLCBpc0NhbmNlbGxlZEVycm9yIH0gZnJvbSAnLi9yZXRyeWVyLm1qcyc7XG5cbmNsYXNzIFF1ZXJ5T2JzZXJ2ZXIgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIG9wdGlvbnMpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy50cmFja2VkUHJvcHMgPSBuZXcgU2V0KCk7XG4gICAgdGhpcy5zZWxlY3RFcnJvciA9IG51bGw7XG4gICAgdGhpcy5iaW5kTWV0aG9kcygpO1xuICAgIHRoaXMuc2V0T3B0aW9ucyhvcHRpb25zKTtcbiAgfVxuXG4gIGJpbmRNZXRob2RzKCkge1xuICAgIHRoaXMucmVtb3ZlID0gdGhpcy5yZW1vdmUuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlZmV0Y2ggPSB0aGlzLnJlZmV0Y2guYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICh0aGlzLmxpc3RlbmVycy5zaXplID09PSAxKSB7XG4gICAgICB0aGlzLmN1cnJlbnRRdWVyeS5hZGRPYnNlcnZlcih0aGlzKTtcblxuICAgICAgaWYgKHNob3VsZEZldGNoT25Nb3VudCh0aGlzLmN1cnJlbnRRdWVyeSwgdGhpcy5vcHRpb25zKSkge1xuICAgICAgICB0aGlzLmV4ZWN1dGVGZXRjaCgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnVwZGF0ZVRpbWVycygpO1xuICAgIH1cbiAgfVxuXG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICB9XG4gIH1cblxuICBzaG91bGRGZXRjaE9uUmVjb25uZWN0KCkge1xuICAgIHJldHVybiBzaG91bGRGZXRjaE9uKHRoaXMuY3VycmVudFF1ZXJ5LCB0aGlzLm9wdGlvbnMsIHRoaXMub3B0aW9ucy5yZWZldGNoT25SZWNvbm5lY3QpO1xuICB9XG5cbiAgc2hvdWxkRmV0Y2hPbldpbmRvd0ZvY3VzKCkge1xuICAgIHJldHVybiBzaG91bGRGZXRjaE9uKHRoaXMuY3VycmVudFF1ZXJ5LCB0aGlzLm9wdGlvbnMsIHRoaXMub3B0aW9ucy5yZWZldGNoT25XaW5kb3dGb2N1cyk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMubGlzdGVuZXJzID0gbmV3IFNldCgpO1xuICAgIHRoaXMuY2xlYXJTdGFsZVRpbWVvdXQoKTtcbiAgICB0aGlzLmNsZWFyUmVmZXRjaEludGVydmFsKCk7XG4gICAgdGhpcy5jdXJyZW50UXVlcnkucmVtb3ZlT2JzZXJ2ZXIodGhpcyk7XG4gIH1cblxuICBzZXRPcHRpb25zKG9wdGlvbnMsIG5vdGlmeU9wdGlvbnMpIHtcbiAgICBjb25zdCBwcmV2T3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICBjb25zdCBwcmV2UXVlcnkgPSB0aGlzLmN1cnJlbnRRdWVyeTtcbiAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmlzRGF0YUVxdWFsKSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRoaXMuY2xpZW50LmdldExvZ2dlcigpLmVycm9yKFwiVGhlIGlzRGF0YUVxdWFsIG9wdGlvbiBoYXMgYmVlbiBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgbWFqb3IgdmVyc2lvbi4gWW91IGNhbiBhY2hpZXZlIHRoZSBzYW1lIGZ1bmN0aW9uYWxpdHkgYnkgcGFzc2luZyBhIGZ1bmN0aW9uIGFzIHRoZSBzdHJ1Y3R1cmFsU2hhcmluZyBvcHRpb25cIik7XG4gICAgfVxuXG4gICAgaWYgKCFzaGFsbG93RXF1YWxPYmplY3RzKHByZXZPcHRpb25zLCB0aGlzLm9wdGlvbnMpKSB7XG4gICAgICB0aGlzLmNsaWVudC5nZXRRdWVyeUNhY2hlKCkubm90aWZ5KHtcbiAgICAgICAgdHlwZTogJ29ic2VydmVyT3B0aW9uc1VwZGF0ZWQnLFxuICAgICAgICBxdWVyeTogdGhpcy5jdXJyZW50UXVlcnksXG4gICAgICAgIG9ic2VydmVyOiB0aGlzXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5lbmFibGVkICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgdGhpcy5vcHRpb25zLmVuYWJsZWQgIT09ICdib29sZWFuJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBlbmFibGVkIHRvIGJlIGEgYm9vbGVhbicpO1xuICAgIH0gLy8gS2VlcCBwcmV2aW91cyBxdWVyeSBrZXkgaWYgdGhlIHVzZXIgZG9lcyBub3Qgc3VwcGx5IG9uZVxuXG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5xdWVyeUtleSkge1xuICAgICAgdGhpcy5vcHRpb25zLnF1ZXJ5S2V5ID0gcHJldk9wdGlvbnMucXVlcnlLZXk7XG4gICAgfVxuXG4gICAgdGhpcy51cGRhdGVRdWVyeSgpO1xuICAgIGNvbnN0IG1vdW50ZWQgPSB0aGlzLmhhc0xpc3RlbmVycygpOyAvLyBGZXRjaCBpZiB0aGVyZSBhcmUgc3Vic2NyaWJlcnNcblxuICAgIGlmIChtb3VudGVkICYmIHNob3VsZEZldGNoT3B0aW9uYWxseSh0aGlzLmN1cnJlbnRRdWVyeSwgcHJldlF1ZXJ5LCB0aGlzLm9wdGlvbnMsIHByZXZPcHRpb25zKSkge1xuICAgICAgdGhpcy5leGVjdXRlRmV0Y2goKTtcbiAgICB9IC8vIFVwZGF0ZSByZXN1bHRcblxuXG4gICAgdGhpcy51cGRhdGVSZXN1bHQobm90aWZ5T3B0aW9ucyk7IC8vIFVwZGF0ZSBzdGFsZSBpbnRlcnZhbCBpZiBuZWVkZWRcblxuICAgIGlmIChtb3VudGVkICYmICh0aGlzLmN1cnJlbnRRdWVyeSAhPT0gcHJldlF1ZXJ5IHx8IHRoaXMub3B0aW9ucy5lbmFibGVkICE9PSBwcmV2T3B0aW9ucy5lbmFibGVkIHx8IHRoaXMub3B0aW9ucy5zdGFsZVRpbWUgIT09IHByZXZPcHRpb25zLnN0YWxlVGltZSkpIHtcbiAgICAgIHRoaXMudXBkYXRlU3RhbGVUaW1lb3V0KCk7XG4gICAgfVxuXG4gICAgY29uc3QgbmV4dFJlZmV0Y2hJbnRlcnZhbCA9IHRoaXMuY29tcHV0ZVJlZmV0Y2hJbnRlcnZhbCgpOyAvLyBVcGRhdGUgcmVmZXRjaCBpbnRlcnZhbCBpZiBuZWVkZWRcblxuICAgIGlmIChtb3VudGVkICYmICh0aGlzLmN1cnJlbnRRdWVyeSAhPT0gcHJldlF1ZXJ5IHx8IHRoaXMub3B0aW9ucy5lbmFibGVkICE9PSBwcmV2T3B0aW9ucy5lbmFibGVkIHx8IG5leHRSZWZldGNoSW50ZXJ2YWwgIT09IHRoaXMuY3VycmVudFJlZmV0Y2hJbnRlcnZhbCkpIHtcbiAgICAgIHRoaXMudXBkYXRlUmVmZXRjaEludGVydmFsKG5leHRSZWZldGNoSW50ZXJ2YWwpO1xuICAgIH1cbiAgfVxuXG4gIGdldE9wdGltaXN0aWNSZXN1bHQob3B0aW9ucykge1xuICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy5jbGllbnQuZ2V0UXVlcnlDYWNoZSgpLmJ1aWxkKHRoaXMuY2xpZW50LCBvcHRpb25zKTtcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmNyZWF0ZVJlc3VsdChxdWVyeSwgb3B0aW9ucyk7XG5cbiAgICBpZiAoc2hvdWxkQXNzaWduT2JzZXJ2ZXJDdXJyZW50UHJvcGVydGllcyh0aGlzLCByZXN1bHQsIG9wdGlvbnMpKSB7XG4gICAgICAvLyB0aGlzIGFzc2lnbnMgdGhlIG9wdGltaXN0aWMgcmVzdWx0IHRvIHRoZSBjdXJyZW50IE9ic2VydmVyXG4gICAgICAvLyBiZWNhdXNlIGlmIHRoZSBxdWVyeSBmdW5jdGlvbiBjaGFuZ2VzLCB1c2VRdWVyeSB3aWxsIGJlIHBlcmZvcm1pbmdcbiAgICAgIC8vIGFuIGVmZmVjdCB3aGVyZSBpdCB3b3VsZCBmZXRjaCBhZ2Fpbi5cbiAgICAgIC8vIFdoZW4gdGhlIGZldGNoIGZpbmlzaGVzLCB3ZSBwZXJmb3JtIGEgZGVlcCBkYXRhIGNsb25pbmcgaW4gb3JkZXJcbiAgICAgIC8vIHRvIHJldXNlIG9iamVjdHMgcmVmZXJlbmNlcy4gVGhpcyBkZWVwIGRhdGEgY2xvbmUgaXMgcGVyZm9ybWVkIGFnYWluc3RcbiAgICAgIC8vIHRoZSBgb2JzZXJ2ZXIuY3VycmVudFJlc3VsdC5kYXRhYCBwcm9wZXJ0eVxuICAgICAgLy8gV2hlbiBRdWVyeUtleSBjaGFuZ2VzLCB3ZSByZWZyZXNoIHRoZSBxdWVyeSBhbmQgZ2V0IG5ldyBgb3B0aW1pc3RpY2BcbiAgICAgIC8vIHJlc3VsdCwgd2hpbGUgd2UgbGVhdmUgdGhlIGBvYnNlcnZlci5jdXJyZW50UmVzdWx0YCwgc28gd2hlbiBuZXcgZGF0YVxuICAgICAgLy8gYXJyaXZlcywgaXQgZmluZHMgdGhlIG9sZCBgb2JzZXJ2ZXIuY3VycmVudFJlc3VsdGAgd2hpY2ggaXMgcmVsYXRlZFxuICAgICAgLy8gdG8gdGhlIG9sZCBRdWVyeUtleS4gV2hpY2ggbWVhbnMgdGhhdCBjdXJyZW50UmVzdWx0IGFuZCBzZWxlY3REYXRhIGFyZVxuICAgICAgLy8gb3V0IG9mIHN5bmMgYWxyZWFkeS5cbiAgICAgIC8vIFRvIHNvbHZlIHRoaXMsIHdlIG1vdmUgdGhlIGN1cnNvciBvZiB0aGUgY3VycmVudFJlc3VsdCBldmVyeXRpbWVcbiAgICAgIC8vIGFuIG9ic2VydmVyIHJlYWRzIGFuIG9wdGltaXN0aWMgdmFsdWUuXG4gICAgICAvLyBXaGVuIGtlZXBpbmcgdGhlIHByZXZpb3VzIGRhdGEsIHRoZSByZXN1bHQgZG9lc24ndCBjaGFuZ2UgdW50aWwgbmV3XG4gICAgICAvLyBkYXRhIGFycml2ZXMuXG4gICAgICB0aGlzLmN1cnJlbnRSZXN1bHQgPSByZXN1bHQ7XG4gICAgICB0aGlzLmN1cnJlbnRSZXN1bHRPcHRpb25zID0gdGhpcy5vcHRpb25zO1xuICAgICAgdGhpcy5jdXJyZW50UmVzdWx0U3RhdGUgPSB0aGlzLmN1cnJlbnRRdWVyeS5zdGF0ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZ2V0Q3VycmVudFJlc3VsdCgpIHtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50UmVzdWx0O1xuICB9XG5cbiAgdHJhY2tSZXN1bHQocmVzdWx0KSB7XG4gICAgY29uc3QgdHJhY2tlZFJlc3VsdCA9IHt9O1xuICAgIE9iamVjdC5rZXlzKHJlc3VsdCkuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRyYWNrZWRSZXN1bHQsIGtleSwge1xuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICB0aGlzLnRyYWNrZWRQcm9wcy5hZGQoa2V5KTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0W2tleV07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiB0cmFja2VkUmVzdWx0O1xuICB9XG5cbiAgZ2V0Q3VycmVudFF1ZXJ5KCkge1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnRRdWVyeTtcbiAgfVxuXG4gIHJlbW92ZSgpIHtcbiAgICB0aGlzLmNsaWVudC5nZXRRdWVyeUNhY2hlKCkucmVtb3ZlKHRoaXMuY3VycmVudFF1ZXJ5KTtcbiAgfVxuXG4gIHJlZmV0Y2goe1xuICAgIHJlZmV0Y2hQYWdlLFxuICAgIC4uLm9wdGlvbnNcbiAgfSA9IHt9KSB7XG4gICAgcmV0dXJuIHRoaXMuZmV0Y2goeyAuLi5vcHRpb25zLFxuICAgICAgbWV0YToge1xuICAgICAgICByZWZldGNoUGFnZVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZmV0Y2hPcHRpbWlzdGljKG9wdGlvbnMpIHtcbiAgICBjb25zdCBkZWZhdWx0ZWRPcHRpb25zID0gdGhpcy5jbGllbnQuZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKTtcbiAgICBjb25zdCBxdWVyeSA9IHRoaXMuY2xpZW50LmdldFF1ZXJ5Q2FjaGUoKS5idWlsZCh0aGlzLmNsaWVudCwgZGVmYXVsdGVkT3B0aW9ucyk7XG4gICAgcXVlcnkuaXNGZXRjaGluZ09wdGltaXN0aWMgPSB0cnVlO1xuICAgIHJldHVybiBxdWVyeS5mZXRjaCgpLnRoZW4oKCkgPT4gdGhpcy5jcmVhdGVSZXN1bHQocXVlcnksIGRlZmF1bHRlZE9wdGlvbnMpKTtcbiAgfVxuXG4gIGZldGNoKGZldGNoT3B0aW9ucykge1xuICAgIHZhciBfZmV0Y2hPcHRpb25zJGNhbmNlbFI7XG5cbiAgICByZXR1cm4gdGhpcy5leGVjdXRlRmV0Y2goeyAuLi5mZXRjaE9wdGlvbnMsXG4gICAgICBjYW5jZWxSZWZldGNoOiAoX2ZldGNoT3B0aW9ucyRjYW5jZWxSID0gZmV0Y2hPcHRpb25zLmNhbmNlbFJlZmV0Y2gpICE9IG51bGwgPyBfZmV0Y2hPcHRpb25zJGNhbmNlbFIgOiB0cnVlXG4gICAgfSkudGhlbigoKSA9PiB7XG4gICAgICB0aGlzLnVwZGF0ZVJlc3VsdCgpO1xuICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFJlc3VsdDtcbiAgICB9KTtcbiAgfVxuXG4gIGV4ZWN1dGVGZXRjaChmZXRjaE9wdGlvbnMpIHtcbiAgICAvLyBNYWtlIHN1cmUgd2UgcmVmZXJlbmNlIHRoZSBsYXRlc3QgcXVlcnkgYXMgdGhlIGN1cnJlbnQgb25lIG1pZ2h0IGhhdmUgYmVlbiByZW1vdmVkXG4gICAgdGhpcy51cGRhdGVRdWVyeSgpOyAvLyBGZXRjaFxuXG4gICAgbGV0IHByb21pc2UgPSB0aGlzLmN1cnJlbnRRdWVyeS5mZXRjaCh0aGlzLm9wdGlvbnMsIGZldGNoT3B0aW9ucyk7XG5cbiAgICBpZiAoIShmZXRjaE9wdGlvbnMgIT0gbnVsbCAmJiBmZXRjaE9wdGlvbnMudGhyb3dPbkVycm9yKSkge1xuICAgICAgcHJvbWlzZSA9IHByb21pc2UuY2F0Y2gobm9vcCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH1cblxuICB1cGRhdGVTdGFsZVRpbWVvdXQoKSB7XG4gICAgdGhpcy5jbGVhclN0YWxlVGltZW91dCgpO1xuXG4gICAgaWYgKGlzU2VydmVyIHx8IHRoaXMuY3VycmVudFJlc3VsdC5pc1N0YWxlIHx8ICFpc1ZhbGlkVGltZW91dCh0aGlzLm9wdGlvbnMuc3RhbGVUaW1lKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHRpbWUgPSB0aW1lVW50aWxTdGFsZSh0aGlzLmN1cnJlbnRSZXN1bHQuZGF0YVVwZGF0ZWRBdCwgdGhpcy5vcHRpb25zLnN0YWxlVGltZSk7IC8vIFRoZSB0aW1lb3V0IGlzIHNvbWV0aW1lcyB0cmlnZ2VyZWQgMSBtcyBiZWZvcmUgdGhlIHN0YWxlIHRpbWUgZXhwaXJhdGlvbi5cbiAgICAvLyBUbyBtaXRpZ2F0ZSB0aGlzIGlzc3VlIHdlIGFsd2F5cyBhZGQgMSBtcyB0byB0aGUgdGltZW91dC5cblxuICAgIGNvbnN0IHRpbWVvdXQgPSB0aW1lICsgMTtcbiAgICB0aGlzLnN0YWxlVGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuY3VycmVudFJlc3VsdC5pc1N0YWxlKSB7XG4gICAgICAgIHRoaXMudXBkYXRlUmVzdWx0KCk7XG4gICAgICB9XG4gICAgfSwgdGltZW91dCk7XG4gIH1cblxuICBjb21wdXRlUmVmZXRjaEludGVydmFsKCkge1xuICAgIHZhciBfdGhpcyRvcHRpb25zJHJlZmV0Y2g7XG5cbiAgICByZXR1cm4gdHlwZW9mIHRoaXMub3B0aW9ucy5yZWZldGNoSW50ZXJ2YWwgPT09ICdmdW5jdGlvbicgPyB0aGlzLm9wdGlvbnMucmVmZXRjaEludGVydmFsKHRoaXMuY3VycmVudFJlc3VsdC5kYXRhLCB0aGlzLmN1cnJlbnRRdWVyeSkgOiAoX3RoaXMkb3B0aW9ucyRyZWZldGNoID0gdGhpcy5vcHRpb25zLnJlZmV0Y2hJbnRlcnZhbCkgIT0gbnVsbCA/IF90aGlzJG9wdGlvbnMkcmVmZXRjaCA6IGZhbHNlO1xuICB9XG5cbiAgdXBkYXRlUmVmZXRjaEludGVydmFsKG5leHRJbnRlcnZhbCkge1xuICAgIHRoaXMuY2xlYXJSZWZldGNoSW50ZXJ2YWwoKTtcbiAgICB0aGlzLmN1cnJlbnRSZWZldGNoSW50ZXJ2YWwgPSBuZXh0SW50ZXJ2YWw7XG5cbiAgICBpZiAoaXNTZXJ2ZXIgfHwgdGhpcy5vcHRpb25zLmVuYWJsZWQgPT09IGZhbHNlIHx8ICFpc1ZhbGlkVGltZW91dCh0aGlzLmN1cnJlbnRSZWZldGNoSW50ZXJ2YWwpIHx8IHRoaXMuY3VycmVudFJlZmV0Y2hJbnRlcnZhbCA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucmVmZXRjaEludGVydmFsSWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnJlZmV0Y2hJbnRlcnZhbEluQmFja2dyb3VuZCB8fCBmb2N1c01hbmFnZXIuaXNGb2N1c2VkKCkpIHtcbiAgICAgICAgdGhpcy5leGVjdXRlRmV0Y2goKTtcbiAgICAgIH1cbiAgICB9LCB0aGlzLmN1cnJlbnRSZWZldGNoSW50ZXJ2YWwpO1xuICB9XG5cbiAgdXBkYXRlVGltZXJzKCkge1xuICAgIHRoaXMudXBkYXRlU3RhbGVUaW1lb3V0KCk7XG4gICAgdGhpcy51cGRhdGVSZWZldGNoSW50ZXJ2YWwodGhpcy5jb21wdXRlUmVmZXRjaEludGVydmFsKCkpO1xuICB9XG5cbiAgY2xlYXJTdGFsZVRpbWVvdXQoKSB7XG4gICAgaWYgKHRoaXMuc3RhbGVUaW1lb3V0SWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnN0YWxlVGltZW91dElkKTtcbiAgICAgIHRoaXMuc3RhbGVUaW1lb3V0SWQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgY2xlYXJSZWZldGNoSW50ZXJ2YWwoKSB7XG4gICAgaWYgKHRoaXMucmVmZXRjaEludGVydmFsSWQpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5yZWZldGNoSW50ZXJ2YWxJZCk7XG4gICAgICB0aGlzLnJlZmV0Y2hJbnRlcnZhbElkID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuXG4gIGNyZWF0ZVJlc3VsdChxdWVyeSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHByZXZRdWVyeSA9IHRoaXMuY3VycmVudFF1ZXJ5O1xuICAgIGNvbnN0IHByZXZPcHRpb25zID0gdGhpcy5vcHRpb25zO1xuICAgIGNvbnN0IHByZXZSZXN1bHQgPSB0aGlzLmN1cnJlbnRSZXN1bHQ7XG4gICAgY29uc3QgcHJldlJlc3VsdFN0YXRlID0gdGhpcy5jdXJyZW50UmVzdWx0U3RhdGU7XG4gICAgY29uc3QgcHJldlJlc3VsdE9wdGlvbnMgPSB0aGlzLmN1cnJlbnRSZXN1bHRPcHRpb25zO1xuICAgIGNvbnN0IHF1ZXJ5Q2hhbmdlID0gcXVlcnkgIT09IHByZXZRdWVyeTtcbiAgICBjb25zdCBxdWVyeUluaXRpYWxTdGF0ZSA9IHF1ZXJ5Q2hhbmdlID8gcXVlcnkuc3RhdGUgOiB0aGlzLmN1cnJlbnRRdWVyeUluaXRpYWxTdGF0ZTtcbiAgICBjb25zdCBwcmV2UXVlcnlSZXN1bHQgPSBxdWVyeUNoYW5nZSA/IHRoaXMuY3VycmVudFJlc3VsdCA6IHRoaXMucHJldmlvdXNRdWVyeVJlc3VsdDtcbiAgICBjb25zdCB7XG4gICAgICBzdGF0ZVxuICAgIH0gPSBxdWVyeTtcbiAgICBsZXQge1xuICAgICAgZGF0YVVwZGF0ZWRBdCxcbiAgICAgIGVycm9yLFxuICAgICAgZXJyb3JVcGRhdGVkQXQsXG4gICAgICBmZXRjaFN0YXR1cyxcbiAgICAgIHN0YXR1c1xuICAgIH0gPSBzdGF0ZTtcbiAgICBsZXQgaXNQcmV2aW91c0RhdGEgPSBmYWxzZTtcbiAgICBsZXQgaXNQbGFjZWhvbGRlckRhdGEgPSBmYWxzZTtcbiAgICBsZXQgZGF0YTsgLy8gT3B0aW1pc3RpY2FsbHkgc2V0IHJlc3VsdCBpbiBmZXRjaGluZyBzdGF0ZSBpZiBuZWVkZWRcblxuICAgIGlmIChvcHRpb25zLl9vcHRpbWlzdGljUmVzdWx0cykge1xuICAgICAgY29uc3QgbW91bnRlZCA9IHRoaXMuaGFzTGlzdGVuZXJzKCk7XG4gICAgICBjb25zdCBmZXRjaE9uTW91bnQgPSAhbW91bnRlZCAmJiBzaG91bGRGZXRjaE9uTW91bnQocXVlcnksIG9wdGlvbnMpO1xuICAgICAgY29uc3QgZmV0Y2hPcHRpb25hbGx5ID0gbW91bnRlZCAmJiBzaG91bGRGZXRjaE9wdGlvbmFsbHkocXVlcnksIHByZXZRdWVyeSwgb3B0aW9ucywgcHJldk9wdGlvbnMpO1xuXG4gICAgICBpZiAoZmV0Y2hPbk1vdW50IHx8IGZldGNoT3B0aW9uYWxseSkge1xuICAgICAgICBmZXRjaFN0YXR1cyA9IGNhbkZldGNoKHF1ZXJ5Lm9wdGlvbnMubmV0d29ya01vZGUpID8gJ2ZldGNoaW5nJyA6ICdwYXVzZWQnO1xuXG4gICAgICAgIGlmICghZGF0YVVwZGF0ZWRBdCkge1xuICAgICAgICAgIHN0YXR1cyA9ICdsb2FkaW5nJztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5fb3B0aW1pc3RpY1Jlc3VsdHMgPT09ICdpc1Jlc3RvcmluZycpIHtcbiAgICAgICAgZmV0Y2hTdGF0dXMgPSAnaWRsZSc7XG4gICAgICB9XG4gICAgfSAvLyBLZWVwIHByZXZpb3VzIGRhdGEgaWYgbmVlZGVkXG5cblxuICAgIGlmIChvcHRpb25zLmtlZXBQcmV2aW91c0RhdGEgJiYgIXN0YXRlLmRhdGFVcGRhdGVkQXQgJiYgcHJldlF1ZXJ5UmVzdWx0ICE9IG51bGwgJiYgcHJldlF1ZXJ5UmVzdWx0LmlzU3VjY2VzcyAmJiBzdGF0dXMgIT09ICdlcnJvcicpIHtcbiAgICAgIGRhdGEgPSBwcmV2UXVlcnlSZXN1bHQuZGF0YTtcbiAgICAgIGRhdGFVcGRhdGVkQXQgPSBwcmV2UXVlcnlSZXN1bHQuZGF0YVVwZGF0ZWRBdDtcbiAgICAgIHN0YXR1cyA9IHByZXZRdWVyeVJlc3VsdC5zdGF0dXM7XG4gICAgICBpc1ByZXZpb3VzRGF0YSA9IHRydWU7XG4gICAgfSAvLyBTZWxlY3QgZGF0YSBpZiBuZWVkZWRcbiAgICBlbHNlIGlmIChvcHRpb25zLnNlbGVjdCAmJiB0eXBlb2Ygc3RhdGUuZGF0YSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIE1lbW9pemUgc2VsZWN0IHJlc3VsdFxuICAgICAgaWYgKHByZXZSZXN1bHQgJiYgc3RhdGUuZGF0YSA9PT0gKHByZXZSZXN1bHRTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogcHJldlJlc3VsdFN0YXRlLmRhdGEpICYmIG9wdGlvbnMuc2VsZWN0ID09PSB0aGlzLnNlbGVjdEZuKSB7XG4gICAgICAgIGRhdGEgPSB0aGlzLnNlbGVjdFJlc3VsdDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3RGbiA9IG9wdGlvbnMuc2VsZWN0O1xuICAgICAgICAgIGRhdGEgPSBvcHRpb25zLnNlbGVjdChzdGF0ZS5kYXRhKTtcbiAgICAgICAgICBkYXRhID0gcmVwbGFjZURhdGEocHJldlJlc3VsdCA9PSBudWxsID8gdm9pZCAwIDogcHJldlJlc3VsdC5kYXRhLCBkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgICB0aGlzLnNlbGVjdFJlc3VsdCA9IGRhdGE7XG4gICAgICAgICAgdGhpcy5zZWxlY3RFcnJvciA9IG51bGw7XG4gICAgICAgIH0gY2F0Y2ggKHNlbGVjdEVycm9yKSB7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMuY2xpZW50LmdldExvZ2dlcigpLmVycm9yKHNlbGVjdEVycm9yKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLnNlbGVjdEVycm9yID0gc2VsZWN0RXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IC8vIFVzZSBxdWVyeSBkYXRhXG4gICAgZWxzZSB7XG4gICAgICBkYXRhID0gc3RhdGUuZGF0YTtcbiAgICB9IC8vIFNob3cgcGxhY2Vob2xkZXIgZGF0YSBpZiBuZWVkZWRcblxuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLnBsYWNlaG9sZGVyRGF0YSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGRhdGEgPT09ICd1bmRlZmluZWQnICYmIHN0YXR1cyA9PT0gJ2xvYWRpbmcnKSB7XG4gICAgICBsZXQgcGxhY2Vob2xkZXJEYXRhOyAvLyBNZW1vaXplIHBsYWNlaG9sZGVyIGRhdGFcblxuICAgICAgaWYgKHByZXZSZXN1bHQgIT0gbnVsbCAmJiBwcmV2UmVzdWx0LmlzUGxhY2Vob2xkZXJEYXRhICYmIG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhID09PSAocHJldlJlc3VsdE9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZSZXN1bHRPcHRpb25zLnBsYWNlaG9sZGVyRGF0YSkpIHtcbiAgICAgICAgcGxhY2Vob2xkZXJEYXRhID0gcHJldlJlc3VsdC5kYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGxhY2Vob2xkZXJEYXRhID0gdHlwZW9mIG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5wbGFjZWhvbGRlckRhdGEoKSA6IG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnNlbGVjdCAmJiB0eXBlb2YgcGxhY2Vob2xkZXJEYXRhICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBwbGFjZWhvbGRlckRhdGEgPSBvcHRpb25zLnNlbGVjdChwbGFjZWhvbGRlckRhdGEpO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RFcnJvciA9IG51bGw7XG4gICAgICAgICAgfSBjYXRjaCAoc2VsZWN0RXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgIHRoaXMuY2xpZW50LmdldExvZ2dlcigpLmVycm9yKHNlbGVjdEVycm9yKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5zZWxlY3RFcnJvciA9IHNlbGVjdEVycm9yO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIHBsYWNlaG9sZGVyRGF0YSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgc3RhdHVzID0gJ3N1Y2Nlc3MnO1xuICAgICAgICBkYXRhID0gcmVwbGFjZURhdGEocHJldlJlc3VsdCA9PSBudWxsID8gdm9pZCAwIDogcHJldlJlc3VsdC5kYXRhLCBwbGFjZWhvbGRlckRhdGEsIG9wdGlvbnMpO1xuICAgICAgICBpc1BsYWNlaG9sZGVyRGF0YSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2VsZWN0RXJyb3IpIHtcbiAgICAgIGVycm9yID0gdGhpcy5zZWxlY3RFcnJvcjtcbiAgICAgIGRhdGEgPSB0aGlzLnNlbGVjdFJlc3VsdDtcbiAgICAgIGVycm9yVXBkYXRlZEF0ID0gRGF0ZS5ub3coKTtcbiAgICAgIHN0YXR1cyA9ICdlcnJvcic7XG4gICAgfVxuXG4gICAgY29uc3QgaXNGZXRjaGluZyA9IGZldGNoU3RhdHVzID09PSAnZmV0Y2hpbmcnO1xuICAgIGNvbnN0IGlzTG9hZGluZyA9IHN0YXR1cyA9PT0gJ2xvYWRpbmcnO1xuICAgIGNvbnN0IGlzRXJyb3IgPSBzdGF0dXMgPT09ICdlcnJvcic7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgc3RhdHVzLFxuICAgICAgZmV0Y2hTdGF0dXMsXG4gICAgICBpc0xvYWRpbmcsXG4gICAgICBpc1N1Y2Nlc3M6IHN0YXR1cyA9PT0gJ3N1Y2Nlc3MnLFxuICAgICAgaXNFcnJvcixcbiAgICAgIGlzSW5pdGlhbExvYWRpbmc6IGlzTG9hZGluZyAmJiBpc0ZldGNoaW5nLFxuICAgICAgZGF0YSxcbiAgICAgIGRhdGFVcGRhdGVkQXQsXG4gICAgICBlcnJvcixcbiAgICAgIGVycm9yVXBkYXRlZEF0LFxuICAgICAgZmFpbHVyZUNvdW50OiBzdGF0ZS5mZXRjaEZhaWx1cmVDb3VudCxcbiAgICAgIGZhaWx1cmVSZWFzb246IHN0YXRlLmZldGNoRmFpbHVyZVJlYXNvbixcbiAgICAgIGVycm9yVXBkYXRlQ291bnQ6IHN0YXRlLmVycm9yVXBkYXRlQ291bnQsXG4gICAgICBpc0ZldGNoZWQ6IHN0YXRlLmRhdGFVcGRhdGVDb3VudCA+IDAgfHwgc3RhdGUuZXJyb3JVcGRhdGVDb3VudCA+IDAsXG4gICAgICBpc0ZldGNoZWRBZnRlck1vdW50OiBzdGF0ZS5kYXRhVXBkYXRlQ291bnQgPiBxdWVyeUluaXRpYWxTdGF0ZS5kYXRhVXBkYXRlQ291bnQgfHwgc3RhdGUuZXJyb3JVcGRhdGVDb3VudCA+IHF1ZXJ5SW5pdGlhbFN0YXRlLmVycm9yVXBkYXRlQ291bnQsXG4gICAgICBpc0ZldGNoaW5nLFxuICAgICAgaXNSZWZldGNoaW5nOiBpc0ZldGNoaW5nICYmICFpc0xvYWRpbmcsXG4gICAgICBpc0xvYWRpbmdFcnJvcjogaXNFcnJvciAmJiBzdGF0ZS5kYXRhVXBkYXRlZEF0ID09PSAwLFxuICAgICAgaXNQYXVzZWQ6IGZldGNoU3RhdHVzID09PSAncGF1c2VkJyxcbiAgICAgIGlzUGxhY2Vob2xkZXJEYXRhLFxuICAgICAgaXNQcmV2aW91c0RhdGEsXG4gICAgICBpc1JlZmV0Y2hFcnJvcjogaXNFcnJvciAmJiBzdGF0ZS5kYXRhVXBkYXRlZEF0ICE9PSAwLFxuICAgICAgaXNTdGFsZTogaXNTdGFsZShxdWVyeSwgb3B0aW9ucyksXG4gICAgICByZWZldGNoOiB0aGlzLnJlZmV0Y2gsXG4gICAgICByZW1vdmU6IHRoaXMucmVtb3ZlXG4gICAgfTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgdXBkYXRlUmVzdWx0KG5vdGlmeU9wdGlvbnMpIHtcbiAgICBjb25zdCBwcmV2UmVzdWx0ID0gdGhpcy5jdXJyZW50UmVzdWx0O1xuICAgIGNvbnN0IG5leHRSZXN1bHQgPSB0aGlzLmNyZWF0ZVJlc3VsdCh0aGlzLmN1cnJlbnRRdWVyeSwgdGhpcy5vcHRpb25zKTtcbiAgICB0aGlzLmN1cnJlbnRSZXN1bHRTdGF0ZSA9IHRoaXMuY3VycmVudFF1ZXJ5LnN0YXRlO1xuICAgIHRoaXMuY3VycmVudFJlc3VsdE9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7IC8vIE9ubHkgbm90aWZ5IGFuZCB1cGRhdGUgcmVzdWx0IGlmIHNvbWV0aGluZyBoYXMgY2hhbmdlZFxuXG4gICAgaWYgKHNoYWxsb3dFcXVhbE9iamVjdHMobmV4dFJlc3VsdCwgcHJldlJlc3VsdCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmN1cnJlbnRSZXN1bHQgPSBuZXh0UmVzdWx0OyAvLyBEZXRlcm1pbmUgd2hpY2ggY2FsbGJhY2tzIHRvIHRyaWdnZXJcblxuICAgIGNvbnN0IGRlZmF1bHROb3RpZnlPcHRpb25zID0ge1xuICAgICAgY2FjaGU6IHRydWVcbiAgICB9O1xuXG4gICAgY29uc3Qgc2hvdWxkTm90aWZ5TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgICAgaWYgKCFwcmV2UmVzdWx0KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB7XG4gICAgICAgIG5vdGlmeU9uQ2hhbmdlUHJvcHNcbiAgICAgIH0gPSB0aGlzLm9wdGlvbnM7XG4gICAgICBjb25zdCBub3RpZnlPbkNoYW5nZVByb3BzVmFsdWUgPSB0eXBlb2Ygbm90aWZ5T25DaGFuZ2VQcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IG5vdGlmeU9uQ2hhbmdlUHJvcHMoKSA6IG5vdGlmeU9uQ2hhbmdlUHJvcHM7XG5cbiAgICAgIGlmIChub3RpZnlPbkNoYW5nZVByb3BzVmFsdWUgPT09ICdhbGwnIHx8ICFub3RpZnlPbkNoYW5nZVByb3BzVmFsdWUgJiYgIXRoaXMudHJhY2tlZFByb3BzLnNpemUpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGluY2x1ZGVkUHJvcHMgPSBuZXcgU2V0KG5vdGlmeU9uQ2hhbmdlUHJvcHNWYWx1ZSAhPSBudWxsID8gbm90aWZ5T25DaGFuZ2VQcm9wc1ZhbHVlIDogdGhpcy50cmFja2VkUHJvcHMpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnVzZUVycm9yQm91bmRhcnkpIHtcbiAgICAgICAgaW5jbHVkZWRQcm9wcy5hZGQoJ2Vycm9yJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmN1cnJlbnRSZXN1bHQpLnNvbWUoa2V5ID0+IHtcbiAgICAgICAgY29uc3QgdHlwZWRLZXkgPSBrZXk7XG4gICAgICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLmN1cnJlbnRSZXN1bHRbdHlwZWRLZXldICE9PSBwcmV2UmVzdWx0W3R5cGVkS2V5XTtcbiAgICAgICAgcmV0dXJuIGNoYW5nZWQgJiYgaW5jbHVkZWRQcm9wcy5oYXModHlwZWRLZXkpO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIGlmICgobm90aWZ5T3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogbm90aWZ5T3B0aW9ucy5saXN0ZW5lcnMpICE9PSBmYWxzZSAmJiBzaG91bGROb3RpZnlMaXN0ZW5lcnMoKSkge1xuICAgICAgZGVmYXVsdE5vdGlmeU9wdGlvbnMubGlzdGVuZXJzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB0aGlzLm5vdGlmeSh7IC4uLmRlZmF1bHROb3RpZnlPcHRpb25zLFxuICAgICAgLi4ubm90aWZ5T3B0aW9uc1xuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlUXVlcnkoKSB7XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLmNsaWVudC5nZXRRdWVyeUNhY2hlKCkuYnVpbGQodGhpcy5jbGllbnQsIHRoaXMub3B0aW9ucyk7XG5cbiAgICBpZiAocXVlcnkgPT09IHRoaXMuY3VycmVudFF1ZXJ5KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcHJldlF1ZXJ5ID0gdGhpcy5jdXJyZW50UXVlcnk7XG4gICAgdGhpcy5jdXJyZW50UXVlcnkgPSBxdWVyeTtcbiAgICB0aGlzLmN1cnJlbnRRdWVyeUluaXRpYWxTdGF0ZSA9IHF1ZXJ5LnN0YXRlO1xuICAgIHRoaXMucHJldmlvdXNRdWVyeVJlc3VsdCA9IHRoaXMuY3VycmVudFJlc3VsdDtcblxuICAgIGlmICh0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICBwcmV2UXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZRdWVyeS5yZW1vdmVPYnNlcnZlcih0aGlzKTtcbiAgICAgIHF1ZXJ5LmFkZE9ic2VydmVyKHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIG9uUXVlcnlVcGRhdGUoYWN0aW9uKSB7XG4gICAgY29uc3Qgbm90aWZ5T3B0aW9ucyA9IHt9O1xuXG4gICAgaWYgKGFjdGlvbi50eXBlID09PSAnc3VjY2VzcycpIHtcbiAgICAgIG5vdGlmeU9wdGlvbnMub25TdWNjZXNzID0gIWFjdGlvbi5tYW51YWw7XG4gICAgfSBlbHNlIGlmIChhY3Rpb24udHlwZSA9PT0gJ2Vycm9yJyAmJiAhaXNDYW5jZWxsZWRFcnJvcihhY3Rpb24uZXJyb3IpKSB7XG4gICAgICBub3RpZnlPcHRpb25zLm9uRXJyb3IgPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMudXBkYXRlUmVzdWx0KG5vdGlmeU9wdGlvbnMpO1xuXG4gICAgaWYgKHRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHRoaXMudXBkYXRlVGltZXJzKCk7XG4gICAgfVxuICB9XG5cbiAgbm90aWZ5KG5vdGlmeU9wdGlvbnMpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIC8vIEZpcnN0IHRyaWdnZXIgdGhlIGNvbmZpZ3VyYXRpb24gY2FsbGJhY2tzXG4gICAgICBpZiAobm90aWZ5T3B0aW9ucy5vblN1Y2Nlc3MpIHtcbiAgICAgICAgdmFyIF90aGlzJG9wdGlvbnMkb25TdWNjZSwgX3RoaXMkb3B0aW9ucywgX3RoaXMkb3B0aW9ucyRvblNldHRsLCBfdGhpcyRvcHRpb25zMjtcblxuICAgICAgICAoX3RoaXMkb3B0aW9ucyRvblN1Y2NlID0gKF90aGlzJG9wdGlvbnMgPSB0aGlzLm9wdGlvbnMpLm9uU3VjY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG9wdGlvbnMkb25TdWNjZS5jYWxsKF90aGlzJG9wdGlvbnMsIHRoaXMuY3VycmVudFJlc3VsdC5kYXRhKTtcbiAgICAgICAgKF90aGlzJG9wdGlvbnMkb25TZXR0bCA9IChfdGhpcyRvcHRpb25zMiA9IHRoaXMub3B0aW9ucykub25TZXR0bGVkKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkb3B0aW9ucyRvblNldHRsLmNhbGwoX3RoaXMkb3B0aW9uczIsIHRoaXMuY3VycmVudFJlc3VsdC5kYXRhLCBudWxsKTtcbiAgICAgIH0gZWxzZSBpZiAobm90aWZ5T3B0aW9ucy5vbkVycm9yKSB7XG4gICAgICAgIHZhciBfdGhpcyRvcHRpb25zJG9uRXJyb3IsIF90aGlzJG9wdGlvbnMzLCBfdGhpcyRvcHRpb25zJG9uU2V0dGwyLCBfdGhpcyRvcHRpb25zNDtcblxuICAgICAgICAoX3RoaXMkb3B0aW9ucyRvbkVycm9yID0gKF90aGlzJG9wdGlvbnMzID0gdGhpcy5vcHRpb25zKS5vbkVycm9yKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkb3B0aW9ucyRvbkVycm9yLmNhbGwoX3RoaXMkb3B0aW9uczMsIHRoaXMuY3VycmVudFJlc3VsdC5lcnJvcik7XG4gICAgICAgIChfdGhpcyRvcHRpb25zJG9uU2V0dGwyID0gKF90aGlzJG9wdGlvbnM0ID0gdGhpcy5vcHRpb25zKS5vblNldHRsZWQpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRvcHRpb25zJG9uU2V0dGwyLmNhbGwoX3RoaXMkb3B0aW9uczQsIHVuZGVmaW5lZCwgdGhpcy5jdXJyZW50UmVzdWx0LmVycm9yKTtcbiAgICAgIH0gLy8gVGhlbiB0cmlnZ2VyIHRoZSBsaXN0ZW5lcnNcblxuXG4gICAgICBpZiAobm90aWZ5T3B0aW9ucy5saXN0ZW5lcnMpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoe1xuICAgICAgICAgIGxpc3RlbmVyXG4gICAgICAgIH0pID0+IHtcbiAgICAgICAgICBsaXN0ZW5lcih0aGlzLmN1cnJlbnRSZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICAgIH0gLy8gVGhlbiB0aGUgY2FjaGUgbGlzdGVuZXJzXG5cblxuICAgICAgaWYgKG5vdGlmeU9wdGlvbnMuY2FjaGUpIHtcbiAgICAgICAgdGhpcy5jbGllbnQuZ2V0UXVlcnlDYWNoZSgpLm5vdGlmeSh7XG4gICAgICAgICAgcXVlcnk6IHRoaXMuY3VycmVudFF1ZXJ5LFxuICAgICAgICAgIHR5cGU6ICdvYnNlcnZlclJlc3VsdHNVcGRhdGVkJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG59XG5cbmZ1bmN0aW9uIHNob3VsZExvYWRPbk1vdW50KHF1ZXJ5LCBvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLmVuYWJsZWQgIT09IGZhbHNlICYmICFxdWVyeS5zdGF0ZS5kYXRhVXBkYXRlZEF0ICYmICEocXVlcnkuc3RhdGUuc3RhdHVzID09PSAnZXJyb3InICYmIG9wdGlvbnMucmV0cnlPbk1vdW50ID09PSBmYWxzZSk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZEZldGNoT25Nb3VudChxdWVyeSwgb3B0aW9ucykge1xuICByZXR1cm4gc2hvdWxkTG9hZE9uTW91bnQocXVlcnksIG9wdGlvbnMpIHx8IHF1ZXJ5LnN0YXRlLmRhdGFVcGRhdGVkQXQgPiAwICYmIHNob3VsZEZldGNoT24ocXVlcnksIG9wdGlvbnMsIG9wdGlvbnMucmVmZXRjaE9uTW91bnQpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRGZXRjaE9uKHF1ZXJ5LCBvcHRpb25zLCBmaWVsZCkge1xuICBpZiAob3B0aW9ucy5lbmFibGVkICE9PSBmYWxzZSkge1xuICAgIGNvbnN0IHZhbHVlID0gdHlwZW9mIGZpZWxkID09PSAnZnVuY3Rpb24nID8gZmllbGQocXVlcnkpIDogZmllbGQ7XG4gICAgcmV0dXJuIHZhbHVlID09PSAnYWx3YXlzJyB8fCB2YWx1ZSAhPT0gZmFsc2UgJiYgaXNTdGFsZShxdWVyeSwgb3B0aW9ucyk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHNob3VsZEZldGNoT3B0aW9uYWxseShxdWVyeSwgcHJldlF1ZXJ5LCBvcHRpb25zLCBwcmV2T3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5lbmFibGVkICE9PSBmYWxzZSAmJiAocXVlcnkgIT09IHByZXZRdWVyeSB8fCBwcmV2T3B0aW9ucy5lbmFibGVkID09PSBmYWxzZSkgJiYgKCFvcHRpb25zLnN1c3BlbnNlIHx8IHF1ZXJ5LnN0YXRlLnN0YXR1cyAhPT0gJ2Vycm9yJykgJiYgaXNTdGFsZShxdWVyeSwgb3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGlzU3RhbGUocXVlcnksIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHF1ZXJ5LmlzU3RhbGVCeVRpbWUob3B0aW9ucy5zdGFsZVRpbWUpO1xufSAvLyB0aGlzIGZ1bmN0aW9uIHdvdWxkIGRlY2lkZSBpZiB3ZSB3aWxsIHVwZGF0ZSB0aGUgb2JzZXJ2ZXIncyAnY3VycmVudCdcbi8vIHByb3BlcnRpZXMgYWZ0ZXIgYW4gb3B0aW1pc3RpYyByZWFkaW5nIHZpYSBnZXRPcHRpbWlzdGljUmVzdWx0XG5cblxuZnVuY3Rpb24gc2hvdWxkQXNzaWduT2JzZXJ2ZXJDdXJyZW50UHJvcGVydGllcyhvYnNlcnZlciwgb3B0aW1pc3RpY1Jlc3VsdCwgb3B0aW9ucykge1xuICAvLyBpdCBpcyBpbXBvcnRhbnQgdG8ga2VlcCB0aGlzIGNvbmRpdGlvbiBsaWtlIHRoaXMgZm9yIHRocmVlIHJlYXNvbnM6XG4gIC8vIDEuIEl0IHdpbGwgZ2V0IHJlbW92ZWQgaW4gdGhlIHY1XG4gIC8vIDIuIGl0IHJlYWRzOiBkb24ndCB1cGRhdGUgdGhlIHByb3BlcnRpZXMgaWYgd2Ugd2FudCB0byBrZWVwIHRoZSBwcmV2aW91c1xuICAvLyBkYXRhLlxuICAvLyAzLiBUaGUgb3Bwb3NpdGUgY29uZGl0aW9uICghb3B0aW9ucy5rZWVwUHJldmlvdXNEYXRhKSB3b3VsZCBmYWxsdGhyb3VnaFxuICAvLyBhbmQgd2lsbCByZXN1bHQgaW4gYSBiYWQgZGVjaXNpb25cbiAgaWYgKG9wdGlvbnMua2VlcFByZXZpb3VzRGF0YSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSAvLyB0aGlzIG1lYW5zIHdlIHdhbnQgdG8gcHV0IHNvbWUgcGxhY2Vob2xkZXIgZGF0YSB3aGVuIHBlbmRpbmcgYW5kIHF1ZXJ5S2V5XG4gIC8vIGNoYW5nZWQuXG5cblxuICBpZiAob3B0aW9ucy5wbGFjZWhvbGRlckRhdGEgIT09IHVuZGVmaW5lZCkge1xuICAgIC8vIHJlLWFzc2lnbiBwcm9wZXJ0aWVzIG9ubHkgaWYgY3VycmVudCBkYXRhIGlzIHBsYWNlaG9sZGVyIGRhdGFcbiAgICAvLyB3aGljaCBtZWFucyB0aGF0IGRhdGEgZGlkIG5vdCBhcnJpdmUgeWV0LCBzbywgaWYgdGhlcmUgaXMgc29tZSBjYWNoZWQgZGF0YVxuICAgIC8vIHdlIG5lZWQgdG8gXCJwcmVwYXJlXCIgdG8gcmVjZWl2ZSBpdFxuICAgIHJldHVybiBvcHRpbWlzdGljUmVzdWx0LmlzUGxhY2Vob2xkZXJEYXRhO1xuICB9IC8vIGlmIHRoZSBuZXdseSBjcmVhdGVkIHJlc3VsdCBpc24ndCB3aGF0IHRoZSBvYnNlcnZlciBpcyBob2xkaW5nIGFzIGN1cnJlbnQsXG4gIC8vIHRoZW4gd2UnbGwgbmVlZCB0byB1cGRhdGUgdGhlIHByb3BlcnRpZXMgYXMgd2VsbFxuXG5cbiAgaWYgKCFzaGFsbG93RXF1YWxPYmplY3RzKG9ic2VydmVyLmdldEN1cnJlbnRSZXN1bHQoKSwgb3B0aW1pc3RpY1Jlc3VsdCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSAvLyBiYXNpY2FsbHksIGp1c3Qga2VlcCBwcmV2aW91cyBwcm9wZXJ0aWVzIGlmIG5vdGhpbmcgY2hhbmdlZFxuXG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgeyBRdWVyeU9ic2VydmVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeU9ic2VydmVyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/queryObserver.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/removable.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/removable.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : _utils_mjs__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=removable.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9yZW1vdmFibGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEOztBQUV2RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFFBQVEsMERBQWM7QUFDdEI7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSx5RkFBeUYsZ0RBQVE7QUFDakc7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYjMtY3Jvd2RmdW5kaW5nLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dhZ21pL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvcmVtb3ZhYmxlLm1qcz8zYzU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVmFsaWRUaW1lb3V0LCBpc1NlcnZlciB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuY2xhc3MgUmVtb3ZhYmxlIHtcbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG4gIH1cblxuICBzY2hlZHVsZUdjKCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcblxuICAgIGlmIChpc1ZhbGlkVGltZW91dCh0aGlzLmNhY2hlVGltZSkpIHtcbiAgICAgIHRoaXMuZ2NUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMub3B0aW9uYWxSZW1vdmUoKTtcbiAgICAgIH0sIHRoaXMuY2FjaGVUaW1lKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVDYWNoZVRpbWUobmV3Q2FjaGVUaW1lKSB7XG4gICAgLy8gRGVmYXVsdCB0byA1IG1pbnV0ZXMgKEluZmluaXR5IGZvciBzZXJ2ZXItc2lkZSkgaWYgbm8gY2FjaGUgdGltZSBpcyBzZXRcbiAgICB0aGlzLmNhY2hlVGltZSA9IE1hdGgubWF4KHRoaXMuY2FjaGVUaW1lIHx8IDAsIG5ld0NhY2hlVGltZSAhPSBudWxsID8gbmV3Q2FjaGVUaW1lIDogaXNTZXJ2ZXIgPyBJbmZpbml0eSA6IDUgKiA2MCAqIDEwMDApO1xuICB9XG5cbiAgY2xlYXJHY1RpbWVvdXQoKSB7XG4gICAgaWYgKHRoaXMuZ2NUaW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5nY1RpbWVvdXQpO1xuICAgICAgdGhpcy5nY1RpbWVvdXQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbn1cblxuZXhwb3J0IHsgUmVtb3ZhYmxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmFibGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/removable.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/retryer.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/retryer.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: () => (/* binding */ CancelledError),\n/* harmony export */   canFetch: () => (/* binding */ canFetch),\n/* harmony export */   createRetryer: () => (/* binding */ createRetryer),\n/* harmony export */   isCancelledError: () => (/* binding */ isCancelledError)\n/* harmony export */ });\n/* harmony import */ var _focusManager_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n/* harmony import */ var _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !_focusManager_mjs__WEBPACK_IMPORTED_MODULE_1__.focusManager.isFocused() || config.networkMode !== 'always' && !_onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.sleep)(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\n\n//# sourceMappingURL=retryer.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9yZXRyeWVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ0U7QUFDaEI7O0FBRXBDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVFQUF1RSw2REFBYTtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLDJEQUFZLG9EQUFvRCw2REFBYTs7QUFFMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxLQUFLOzs7QUFHTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3Qjs7QUFFeEI7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7O0FBR1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7O0FBRXRCLDJFQUEyRTs7QUFFM0UsTUFBTSxpREFBSztBQUNYO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsS0FBSzs7O0FBR0w7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFcUU7QUFDckUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3JldHJ5ZXIubWpzPzhjYjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSAnLi9mb2N1c01hbmFnZXIubWpzJztcbmltcG9ydCB7IG9ubGluZU1hbmFnZXIgfSBmcm9tICcuL29ubGluZU1hbmFnZXIubWpzJztcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5mdW5jdGlvbiBkZWZhdWx0UmV0cnlEZWxheShmYWlsdXJlQ291bnQpIHtcbiAgcmV0dXJuIE1hdGgubWluKDEwMDAgKiAyICoqIGZhaWx1cmVDb3VudCwgMzAwMDApO1xufVxuXG5mdW5jdGlvbiBjYW5GZXRjaChuZXR3b3JrTW9kZSkge1xuICByZXR1cm4gKG5ldHdvcmtNb2RlICE9IG51bGwgPyBuZXR3b3JrTW9kZSA6ICdvbmxpbmUnKSA9PT0gJ29ubGluZScgPyBvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkgOiB0cnVlO1xufVxuY2xhc3MgQ2FuY2VsbGVkRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5yZXZlcnQgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnJldmVydDtcbiAgICB0aGlzLnNpbGVudCA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lsZW50O1xuICB9XG5cbn1cbmZ1bmN0aW9uIGlzQ2FuY2VsbGVkRXJyb3IodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgQ2FuY2VsbGVkRXJyb3I7XG59XG5mdW5jdGlvbiBjcmVhdGVSZXRyeWVyKGNvbmZpZykge1xuICBsZXQgaXNSZXRyeUNhbmNlbGxlZCA9IGZhbHNlO1xuICBsZXQgZmFpbHVyZUNvdW50ID0gMDtcbiAgbGV0IGlzUmVzb2x2ZWQgPSBmYWxzZTtcbiAgbGV0IGNvbnRpbnVlRm47XG4gIGxldCBwcm9taXNlUmVzb2x2ZTtcbiAgbGV0IHByb21pc2VSZWplY3Q7XG4gIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgob3V0ZXJSZXNvbHZlLCBvdXRlclJlamVjdCkgPT4ge1xuICAgIHByb21pc2VSZXNvbHZlID0gb3V0ZXJSZXNvbHZlO1xuICAgIHByb21pc2VSZWplY3QgPSBvdXRlclJlamVjdDtcbiAgfSk7XG5cbiAgY29uc3QgY2FuY2VsID0gY2FuY2VsT3B0aW9ucyA9PiB7XG4gICAgaWYgKCFpc1Jlc29sdmVkKSB7XG4gICAgICByZWplY3QobmV3IENhbmNlbGxlZEVycm9yKGNhbmNlbE9wdGlvbnMpKTtcbiAgICAgIGNvbmZpZy5hYm9ydCA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLmFib3J0KCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGNhbmNlbFJldHJ5ID0gKCkgPT4ge1xuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSB0cnVlO1xuICB9O1xuXG4gIGNvbnN0IGNvbnRpbnVlUmV0cnkgPSAoKSA9PiB7XG4gICAgaXNSZXRyeUNhbmNlbGxlZCA9IGZhbHNlO1xuICB9O1xuXG4gIGNvbnN0IHNob3VsZFBhdXNlID0gKCkgPT4gIWZvY3VzTWFuYWdlci5pc0ZvY3VzZWQoKSB8fCBjb25maWcubmV0d29ya01vZGUgIT09ICdhbHdheXMnICYmICFvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCk7XG5cbiAgY29uc3QgcmVzb2x2ZSA9IHZhbHVlID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uU3VjY2VzcyA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLm9uU3VjY2Vzcyh2YWx1ZSk7XG4gICAgICBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICBwcm9taXNlUmVzb2x2ZSh2YWx1ZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHJlamVjdCA9IHZhbHVlID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uRXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkVycm9yKHZhbHVlKTtcbiAgICAgIGNvbnRpbnVlRm4gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbnRpbnVlRm4oKTtcbiAgICAgIHByb21pc2VSZWplY3QodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBwYXVzZSA9ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoY29udGludWVSZXNvbHZlID0+IHtcbiAgICAgIGNvbnRpbnVlRm4gPSB2YWx1ZSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbkNvbnRpbnVlID0gaXNSZXNvbHZlZCB8fCAhc2hvdWxkUGF1c2UoKTtcblxuICAgICAgICBpZiAoY2FuQ29udGludWUpIHtcbiAgICAgICAgICBjb250aW51ZVJlc29sdmUodmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNhbkNvbnRpbnVlO1xuICAgICAgfTtcblxuICAgICAgY29uZmlnLm9uUGF1c2UgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vblBhdXNlKCk7XG4gICAgfSkudGhlbigoKSA9PiB7XG4gICAgICBjb250aW51ZUZuID0gdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgICAgY29uZmlnLm9uQ29udGludWUgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkNvbnRpbnVlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07IC8vIENyZWF0ZSBsb29wIGZ1bmN0aW9uXG5cblxuICBjb25zdCBydW4gPSAoKSA9PiB7XG4gICAgLy8gRG8gbm90aGluZyBpZiBhbHJlYWR5IHJlc29sdmVkXG4gICAgaWYgKGlzUmVzb2x2ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcHJvbWlzZU9yVmFsdWU7IC8vIEV4ZWN1dGUgcXVlcnlcblxuICAgIHRyeSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IGNvbmZpZy5mbigpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG5cbiAgICBQcm9taXNlLnJlc29sdmUocHJvbWlzZU9yVmFsdWUpLnRoZW4ocmVzb2x2ZSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgdmFyIF9jb25maWckcmV0cnksIF9jb25maWckcmV0cnlEZWxheTtcblxuICAgICAgLy8gU3RvcCBpZiB0aGUgZmV0Y2ggaXMgYWxyZWFkeSByZXNvbHZlZFxuICAgICAgaWYgKGlzUmVzb2x2ZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBEbyB3ZSBuZWVkIHRvIHJldHJ5IHRoZSByZXF1ZXN0P1xuXG5cbiAgICAgIGNvbnN0IHJldHJ5ID0gKF9jb25maWckcmV0cnkgPSBjb25maWcucmV0cnkpICE9IG51bGwgPyBfY29uZmlnJHJldHJ5IDogMztcbiAgICAgIGNvbnN0IHJldHJ5RGVsYXkgPSAoX2NvbmZpZyRyZXRyeURlbGF5ID0gY29uZmlnLnJldHJ5RGVsYXkpICE9IG51bGwgPyBfY29uZmlnJHJldHJ5RGVsYXkgOiBkZWZhdWx0UmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IGRlbGF5ID0gdHlwZW9mIHJldHJ5RGVsYXkgPT09ICdmdW5jdGlvbicgPyByZXRyeURlbGF5KGZhaWx1cmVDb3VudCwgZXJyb3IpIDogcmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IHNob3VsZFJldHJ5ID0gcmV0cnkgPT09IHRydWUgfHwgdHlwZW9mIHJldHJ5ID09PSAnbnVtYmVyJyAmJiBmYWlsdXJlQ291bnQgPCByZXRyeSB8fCB0eXBlb2YgcmV0cnkgPT09ICdmdW5jdGlvbicgJiYgcmV0cnkoZmFpbHVyZUNvdW50LCBlcnJvcik7XG5cbiAgICAgIGlmIChpc1JldHJ5Q2FuY2VsbGVkIHx8ICFzaG91bGRSZXRyeSkge1xuICAgICAgICAvLyBXZSBhcmUgZG9uZSBpZiB0aGUgcXVlcnkgZG9lcyBub3QgbmVlZCB0byBiZSByZXRyaWVkXG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZmFpbHVyZUNvdW50Kys7IC8vIE5vdGlmeSBvbiBmYWlsXG5cbiAgICAgIGNvbmZpZy5vbkZhaWwgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkZhaWwoZmFpbHVyZUNvdW50LCBlcnJvcik7IC8vIERlbGF5XG5cbiAgICAgIHNsZWVwKGRlbGF5KSAvLyBQYXVzZSBpZiB0aGUgZG9jdW1lbnQgaXMgbm90IHZpc2libGUgb3Igd2hlbiB0aGUgZGV2aWNlIGlzIG9mZmxpbmVcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKHNob3VsZFBhdXNlKCkpIHtcbiAgICAgICAgICByZXR1cm4gcGF1c2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoaXNSZXRyeUNhbmNlbGxlZCkge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcnVuKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9OyAvLyBTdGFydCBsb29wXG5cblxuICBpZiAoY2FuRmV0Y2goY29uZmlnLm5ldHdvcmtNb2RlKSkge1xuICAgIHJ1bigpO1xuICB9IGVsc2Uge1xuICAgIHBhdXNlKCkudGhlbihydW4pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9taXNlLFxuICAgIGNhbmNlbCxcbiAgICBjb250aW51ZTogKCkgPT4ge1xuICAgICAgY29uc3QgZGlkQ29udGludWUgPSBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICByZXR1cm4gZGlkQ29udGludWUgPyBwcm9taXNlIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfSxcbiAgICBjYW5jZWxSZXRyeSxcbiAgICBjb250aW51ZVJldHJ5XG4gIH07XG59XG5cbmV4cG9ydCB7IENhbmNlbGxlZEVycm9yLCBjYW5GZXRjaCwgY3JlYXRlUmV0cnllciwgaXNDYW5jZWxsZWRFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV0cnllci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/retryer.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: () => (/* binding */ Subscribable)\n/* harmony export */ });\nclass Subscribable {\n  constructor() {\n    this.listeners = new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    const identity = {\n      listener\n    };\n    this.listeners.add(identity);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(identity);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\n\n//# sourceMappingURL=subscribable.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9zdWJzY3JpYmFibGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjs7QUFFQSxtQkFBbUI7QUFDbkI7O0FBRUE7O0FBRXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViMy1jcm93ZGZ1bmRpbmctZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9zdWJzY3JpYmFibGUubWpzP2ZhY2EiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBuZXcgU2V0KCk7XG4gICAgdGhpcy5zdWJzY3JpYmUgPSB0aGlzLnN1YnNjcmliZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgY29uc3QgaWRlbnRpdHkgPSB7XG4gICAgICBsaXN0ZW5lclxuICAgIH07XG4gICAgdGhpcy5saXN0ZW5lcnMuYWRkKGlkZW50aXR5KTtcbiAgICB0aGlzLm9uU3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmRlbGV0ZShpZGVudGl0eSk7XG4gICAgICB0aGlzLm9uVW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9XG5cbiAgaGFzTGlzdGVuZXJzKCkge1xuICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5zaXplID4gMDtcbiAgfVxuXG4gIG9uU3Vic2NyaWJlKCkgey8vIERvIG5vdGhpbmdcbiAgfVxuXG4gIG9uVW5zdWJzY3JpYmUoKSB7Ly8gRG8gbm90aGluZ1xuICB9XG5cbn1cblxuZXhwb3J0IHsgU3Vic2NyaWJhYmxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJzY3JpYmFibGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/subscribable.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   difference: () => (/* binding */ difference),\n/* harmony export */   functionalUpdate: () => (/* binding */ functionalUpdate),\n/* harmony export */   getAbortController: () => (/* binding */ getAbortController),\n/* harmony export */   hashQueryKey: () => (/* binding */ hashQueryKey),\n/* harmony export */   hashQueryKeyByOptions: () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   isError: () => (/* binding */ isError),\n/* harmony export */   isPlainArray: () => (/* binding */ isPlainArray),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isQueryKey: () => (/* binding */ isQueryKey),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   isValidTimeout: () => (/* binding */ isValidTimeout),\n/* harmony export */   matchMutation: () => (/* binding */ matchMutation),\n/* harmony export */   matchQuery: () => (/* binding */ matchQuery),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   parseFilterArgs: () => (/* binding */ parseFilterArgs),\n/* harmony export */   parseMutationArgs: () => (/* binding */ parseMutationArgs),\n/* harmony export */   parseMutationFilterArgs: () => (/* binding */ parseMutationFilterArgs),\n/* harmony export */   parseQueryArgs: () => (/* binding */ parseQueryArgs),\n/* harmony export */   partialDeepEqual: () => (/* binding */ partialDeepEqual),\n/* harmony export */   partialMatchKey: () => (/* binding */ partialMatchKey),\n/* harmony export */   replaceAt: () => (/* binding */ replaceAt),\n/* harmony export */   replaceData: () => (/* binding */ replaceData),\n/* harmony export */   replaceEqualDeep: () => (/* binding */ replaceEqualDeep),\n/* harmony export */   scheduleMicrotask: () => (/* binding */ scheduleMicrotask),\n/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUntilStale: () => (/* binding */ timeUntilStale)\n/* harmony export */ });\n// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientProvider: () => (/* binding */ QueryClientProvider),\n/* harmony export */   defaultContext: () => (/* binding */ defaultContext),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n'use client';\n\n\nconst defaultContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = react__WEBPACK_IMPORTED_MODULE_0__.useContext(getQueryClientContext(context, react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if ( true && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\n\n//# sourceMappingURL=QueryClientProvider.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvUXVlcnlDbGllbnRQcm92aWRlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQytCOztBQUUvQixvQ0FBb0MsZ0RBQW1CO0FBQ3ZELCtDQUErQyxnREFBbUIsU0FBUztBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFLElBQUk7QUFDTixzQkFBc0IsNkNBQWdCLGdDQUFnQyw2Q0FBZ0I7O0FBRXRGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxFQUFFLDRDQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSCxNQUFNLEtBQXFDO0FBQzNDO0FBQ0E7O0FBRUE7QUFDQSxzQkFBc0IsZ0RBQW1CO0FBQ3pDO0FBQ0EsR0FBRyxlQUFlLGdEQUFtQjtBQUNyQztBQUNBLEdBQUc7QUFDSDs7QUFFK0Q7QUFDL0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL2xpYi9RdWVyeUNsaWVudFByb3ZpZGVyLm1qcz8zMDQwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgZGVmYXVsdENvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dCh1bmRlZmluZWQpO1xuY29uc3QgUXVlcnlDbGllbnRTaGFyaW5nQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KGZhbHNlKTsgLy8gSWYgd2UgYXJlIGdpdmVuIGEgY29udGV4dCwgd2Ugd2lsbCB1c2UgaXQuXG4vLyBPdGhlcndpc2UsIGlmIGNvbnRleHRTaGFyaW5nIGlzIG9uLCB3ZSBzaGFyZSB0aGUgZmlyc3QgYW5kIGF0IGxlYXN0IG9uZVxuLy8gaW5zdGFuY2Ugb2YgdGhlIGNvbnRleHQgYWNyb3NzIHRoZSB3aW5kb3dcbi8vIHRvIGVuc3VyZSB0aGF0IGlmIFJlYWN0IFF1ZXJ5IGlzIHVzZWQgYWNyb3NzXG4vLyBkaWZmZXJlbnQgYnVuZGxlcyBvciBtaWNyb2Zyb250ZW5kcyB0aGV5IHdpbGxcbi8vIGFsbCB1c2UgdGhlIHNhbWUgKippbnN0YW5jZSoqIG9mIGNvbnRleHQsIHJlZ2FyZGxlc3Ncbi8vIG9mIG1vZHVsZSBzY29waW5nLlxuXG5mdW5jdGlvbiBnZXRRdWVyeUNsaWVudENvbnRleHQoY29udGV4dCwgY29udGV4dFNoYXJpbmcpIHtcbiAgaWYgKGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dDtcbiAgfVxuXG4gIGlmIChjb250ZXh0U2hhcmluZyAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICghd2luZG93LlJlYWN0UXVlcnlDbGllbnRDb250ZXh0KSB7XG4gICAgICB3aW5kb3cuUmVhY3RRdWVyeUNsaWVudENvbnRleHQgPSBkZWZhdWx0Q29udGV4dDtcbiAgICB9XG5cbiAgICByZXR1cm4gd2luZG93LlJlYWN0UXVlcnlDbGllbnRDb250ZXh0O1xuICB9XG5cbiAgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xufVxuXG5jb25zdCB1c2VRdWVyeUNsaWVudCA9ICh7XG4gIGNvbnRleHRcbn0gPSB7fSkgPT4ge1xuICBjb25zdCBxdWVyeUNsaWVudCA9IFJlYWN0LnVzZUNvbnRleHQoZ2V0UXVlcnlDbGllbnRDb250ZXh0KGNvbnRleHQsIFJlYWN0LnVzZUNvbnRleHQoUXVlcnlDbGllbnRTaGFyaW5nQ29udGV4dCkpKTtcblxuICBpZiAoIXF1ZXJ5Q2xpZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdObyBRdWVyeUNsaWVudCBzZXQsIHVzZSBRdWVyeUNsaWVudFByb3ZpZGVyIHRvIHNldCBvbmUnKTtcbiAgfVxuXG4gIHJldHVybiBxdWVyeUNsaWVudDtcbn07XG5jb25zdCBRdWVyeUNsaWVudFByb3ZpZGVyID0gKHtcbiAgY2xpZW50LFxuICBjaGlsZHJlbixcbiAgY29udGV4dCxcbiAgY29udGV4dFNoYXJpbmcgPSBmYWxzZVxufSkgPT4ge1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNsaWVudC5tb3VudCgpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGllbnQudW5tb3VudCgpO1xuICAgIH07XG4gIH0sIFtjbGllbnRdKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjb250ZXh0U2hhcmluZykge1xuICAgIGNsaWVudC5nZXRMb2dnZXIoKS5lcnJvcihcIlRoZSBjb250ZXh0U2hhcmluZyBvcHRpb24gaGFzIGJlZW4gZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb25cIik7XG4gIH1cblxuICBjb25zdCBDb250ZXh0ID0gZ2V0UXVlcnlDbGllbnRDb250ZXh0KGNvbnRleHQsIGNvbnRleHRTaGFyaW5nKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFF1ZXJ5Q2xpZW50U2hhcmluZ0NvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogIWNvbnRleHQgJiYgY29udGV4dFNoYXJpbmdcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjbGllbnRcbiAgfSwgY2hpbGRyZW4pKTtcbn07XG5cbmV4cG9ydCB7IFF1ZXJ5Q2xpZW50UHJvdmlkZXIsIGRlZmF1bHRDb250ZXh0LCB1c2VRdWVyeUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UXVlcnlDbGllbnRQcm92aWRlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryErrorResetBoundary: () => (/* binding */ QueryErrorResetBoundary),\n/* harmony export */   useQueryErrorResetBoundary: () => (/* binding */ useQueryErrorResetBoundary)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n'use client';\n\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => createValue());\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\n\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvREFBb0QsZ0RBQW1CLGlCQUFpQjs7QUFFeEYseUNBQXlDLDZDQUFnQixrQ0FBa0M7O0FBRTNGO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCLDJDQUFjO0FBQ2hDLHNCQUFzQixnREFBbUI7QUFDekM7QUFDQSxHQUFHO0FBQ0g7O0FBRStEO0FBQy9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViMy1jcm93ZGZ1bmRpbmctZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkubWpzPzgyODAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBjcmVhdGVWYWx1ZSgpIHtcbiAgbGV0IGlzUmVzZXQgPSBmYWxzZTtcbiAgcmV0dXJuIHtcbiAgICBjbGVhclJlc2V0OiAoKSA9PiB7XG4gICAgICBpc1Jlc2V0ID0gZmFsc2U7XG4gICAgfSxcbiAgICByZXNldDogKCkgPT4ge1xuICAgICAgaXNSZXNldCA9IHRydWU7XG4gICAgfSxcbiAgICBpc1Jlc2V0OiAoKSA9PiB7XG4gICAgICByZXR1cm4gaXNSZXNldDtcbiAgICB9XG4gIH07XG59XG5cbmNvbnN0IFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KGNyZWF0ZVZhbHVlKCkpOyAvLyBIT09LXG5cbmNvbnN0IHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5ID0gKCkgPT4gUmVhY3QudXNlQ29udGV4dChRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQpOyAvLyBDT01QT05FTlRcblxuY29uc3QgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkgPSAoe1xuICBjaGlsZHJlblxufSkgPT4ge1xuICBjb25zdCBbdmFsdWVdID0gUmVhY3QudXNlU3RhdGUoKCkgPT4gY3JlYXRlVmFsdWUoKSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogdmFsdWVcbiAgfSwgdHlwZW9mIGNoaWxkcmVuID09PSAnZnVuY3Rpb24nID8gY2hpbGRyZW4odmFsdWUpIDogY2hpbGRyZW4pO1xufTtcblxuZXhwb3J0IHsgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnksIHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1RdWVyeUVycm9yUmVzZXRCb3VuZGFyeS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IsRestoringProvider: () => (/* binding */ IsRestoringProvider),\n/* harmony export */   useIsRestoring: () => (/* binding */ useIsRestoring)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n'use client';\n\n\nconst IsRestoringContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(false);\nconst useIsRestoring = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\n\n//# sourceMappingURL=isRestoring.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvaXNSZXN0b3JpbmcubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCOztBQUUvQix3Q0FBd0MsZ0RBQW1CO0FBQzNELDZCQUE2Qiw2Q0FBZ0I7QUFDN0M7O0FBRStDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViMy1jcm93ZGZ1bmRpbmctZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvaXNSZXN0b3JpbmcubWpzPzNkOWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBJc1Jlc3RvcmluZ0NvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChmYWxzZSk7XG5jb25zdCB1c2VJc1Jlc3RvcmluZyA9ICgpID0+IFJlYWN0LnVzZUNvbnRleHQoSXNSZXN0b3JpbmdDb250ZXh0KTtcbmNvbnN0IElzUmVzdG9yaW5nUHJvdmlkZXIgPSBJc1Jlc3RvcmluZ0NvbnRleHQuUHJvdmlkZXI7XG5cbmV4cG9ydCB7IElzUmVzdG9yaW5nUHJvdmlkZXIsIHVzZUlzUmVzdG9yaW5nIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1Jlc3RvcmluZy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useMutation.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useMutation.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMutation: () => (/* binding */ useMutation)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _useSyncExternalStore_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useSyncExternalStore.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs\");\n/* harmony import */ var _QueryClientProvider_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./QueryClientProvider.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/utils.mjs\");\n'use client';\n\n\n\n\n\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = (0,_tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__.parseMutationArgs)(arg1, arg2, arg3);\n  const queryClient = (0,_QueryClientProvider_mjs__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)({\n    context: options.context\n  });\n  const [observer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => new _tanstack_query_core__WEBPACK_IMPORTED_MODULE_3__.MutationObserver(queryClient, options));\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = (0,_useSyncExternalStore_mjs__WEBPACK_IMPORTED_MODULE_4__.useSyncExternalStore)(react__WEBPACK_IMPORTED_MODULE_0__.useCallback(onStoreChange => observer.subscribe(_tanstack_query_core__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n\n  if (result.error && (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_6__.shouldThrowError)(observer.options.useErrorBoundary, [result.error])) {\n    throw result.error;\n  }\n\n  return { ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\n\n\n//# sourceMappingURL=useMutation.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvdXNlTXV0YXRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDMkQ7QUFDeEI7QUFDUDtBQUNaOztBQUUvQztBQUNBLGtCQUFrQix1RUFBaUI7QUFDbkMsc0JBQXNCLHdFQUFjO0FBQ3BDO0FBQ0EsR0FBRztBQUNILHFCQUFxQiwyQ0FBYyxXQUFXLGtFQUFnQjtBQUM5RCxFQUFFLDRDQUFlO0FBQ2pCO0FBQ0EsR0FBRztBQUNILGlCQUFpQiwrRUFBb0IsQ0FBQyw4Q0FBaUIscUNBQXFDLCtEQUFhO0FBQ3pHLGlCQUFpQiw4Q0FBaUI7QUFDbEM7QUFDQSxHQUFHOztBQUVILHNCQUFzQiw0REFBZ0I7QUFDdEM7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93YWdtaS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL2xpYi91c2VNdXRhdGlvbi5tanM/ZjIzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBwYXJzZU11dGF0aW9uQXJncywgTXV0YXRpb25PYnNlcnZlciwgbm90aWZ5TWFuYWdlciB9IGZyb20gJ0B0YW5zdGFjay9xdWVyeS1jb3JlJztcbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIH0gZnJvbSAnLi91c2VTeW5jRXh0ZXJuYWxTdG9yZS5tanMnO1xuaW1wb3J0IHsgdXNlUXVlcnlDbGllbnQgfSBmcm9tICcuL1F1ZXJ5Q2xpZW50UHJvdmlkZXIubWpzJztcbmltcG9ydCB7IHNob3VsZFRocm93RXJyb3IgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5cbmZ1bmN0aW9uIHVzZU11dGF0aW9uKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgY29uc3Qgb3B0aW9ucyA9IHBhcnNlTXV0YXRpb25BcmdzKGFyZzEsIGFyZzIsIGFyZzMpO1xuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5Q2xpZW50KHtcbiAgICBjb250ZXh0OiBvcHRpb25zLmNvbnRleHRcbiAgfSk7XG4gIGNvbnN0IFtvYnNlcnZlcl0gPSBSZWFjdC51c2VTdGF0ZSgoKSA9PiBuZXcgTXV0YXRpb25PYnNlcnZlcihxdWVyeUNsaWVudCwgb3B0aW9ucykpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIG9ic2VydmVyLnNldE9wdGlvbnMob3B0aW9ucyk7XG4gIH0sIFtvYnNlcnZlciwgb3B0aW9uc10pO1xuICBjb25zdCByZXN1bHQgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShSZWFjdC51c2VDYWxsYmFjayhvblN0b3JlQ2hhbmdlID0+IG9ic2VydmVyLnN1YnNjcmliZShub3RpZnlNYW5hZ2VyLmJhdGNoQ2FsbHMob25TdG9yZUNoYW5nZSkpLCBbb2JzZXJ2ZXJdKSwgKCkgPT4gb2JzZXJ2ZXIuZ2V0Q3VycmVudFJlc3VsdCgpLCAoKSA9PiBvYnNlcnZlci5nZXRDdXJyZW50UmVzdWx0KCkpO1xuICBjb25zdCBtdXRhdGUgPSBSZWFjdC51c2VDYWxsYmFjaygodmFyaWFibGVzLCBtdXRhdGVPcHRpb25zKSA9PiB7XG4gICAgb2JzZXJ2ZXIubXV0YXRlKHZhcmlhYmxlcywgbXV0YXRlT3B0aW9ucykuY2F0Y2gobm9vcCk7XG4gIH0sIFtvYnNlcnZlcl0pO1xuXG4gIGlmIChyZXN1bHQuZXJyb3IgJiYgc2hvdWxkVGhyb3dFcnJvcihvYnNlcnZlci5vcHRpb25zLnVzZUVycm9yQm91bmRhcnksIFtyZXN1bHQuZXJyb3JdKSkge1xuICAgIHRocm93IHJlc3VsdC5lcnJvcjtcbiAgfVxuXG4gIHJldHVybiB7IC4uLnJlc3VsdCxcbiAgICBtdXRhdGUsXG4gICAgbXV0YXRlQXN5bmM6IHJlc3VsdC5tdXRhdGVcbiAgfTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuXG5mdW5jdGlvbiBub29wKCkge31cblxuZXhwb3J0IHsgdXNlTXV0YXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZU11dGF0aW9uLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useMutation.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSyncExternalStore: () => (/* binding */ useSyncExternalStore)\n/* harmony export */ });\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(ssr)/./node_modules/use-sync-external-store/shim/index.js\");\n'use client';\n\n\nconst useSyncExternalStore = use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore;\n\n\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvdXNlU3luY0V4dGVybmFsU3RvcmUubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDdUc7O0FBRXZHLDZCQUE2Qix1RkFBc0I7O0FBRW5CO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViMy1jcm93ZGZ1bmRpbmctZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvdXNlU3luY0V4dGVybmFsU3RvcmUubWpzPzIzYjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0IHsgdXNlU3luY0V4dGVybmFsU3RvcmUgYXMgdXNlU3luY0V4dGVybmFsU3RvcmUkMSB9IGZyb20gJ3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanMnO1xuXG5jb25zdCB1c2VTeW5jRXh0ZXJuYWxTdG9yZSA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlJDE7XG5cbmV4cG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VTeW5jRXh0ZXJuYWxTdG9yZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/utils.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/utils.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shouldThrowError: () => (/* binding */ shouldThrowError)\n/* harmony export */ });\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvdXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViMy1jcm93ZGZ1bmRpbmctZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2FnbWkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvdXRpbHMubWpzP2JhMDIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gc2hvdWxkVGhyb3dFcnJvcihfdXNlRXJyb3JCb3VuZGFyeSwgcGFyYW1zKSB7XG4gIC8vIEFsbG93IHVzZUVycm9yQm91bmRhcnkgZnVuY3Rpb24gdG8gb3ZlcnJpZGUgdGhyb3dpbmcgYmVoYXZpb3Igb24gYSBwZXItZXJyb3IgYmFzaXNcbiAgaWYgKHR5cGVvZiBfdXNlRXJyb3JCb3VuZGFyeSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBfdXNlRXJyb3JCb3VuZGFyeSguLi5wYXJhbXMpO1xuICB9XG5cbiAgcmV0dXJuICEhX3VzZUVycm9yQm91bmRhcnk7XG59XG5cbmV4cG9ydCB7IHNob3VsZFRocm93RXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wagmi/node_modules/@tanstack/react-query/build/lib/utils.mjs\n");

/***/ })

};
;